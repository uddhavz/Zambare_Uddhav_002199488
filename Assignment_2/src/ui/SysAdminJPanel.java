/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.*;

/**
 *
 * @author UddhavZ
 */
public class SysAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SysAdminJPanel
     */
    ManagementSystem system;
    JLayeredPane layeredPane;
    Patient currentPatient;

    String pattern = "MM/dd/yyyy hh:mm:ss";
    SimpleDateFormat sDF = new SimpleDateFormat(pattern);
    
    
    public SysAdminJPanel(JLayeredPane layeredPane, ManagementSystem system) {
        initComponents();
        this.layeredPane = layeredPane;
        this.system = system;
        emptyPersonBased();
        sDF.setLenient(false);
        currentModifyPatientID = 0;
//        displayPanel(dashboardLayerdPane, personBased);
        populatePersonCatalog();
        tableRecordsStatus.setSize(tableRecordsStatus.getPreferredSize());
        ageGroupTableStatus.setSize(ageGroupTableStatus.getPreferredSize());
        noPersonTableStatus.setSize(noPersonTableStatus.getPreferredSize());
        noPatientTableStatus.setSize(noPatientTableStatus.getPreferredSize());
        noEncounterTableStatus.setSize(noEncounterTableStatus.getPreferredSize());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableRecordsStatus = new javax.swing.JLabel();
        ageGroupTableStatus = new javax.swing.JLabel();
        noPatientTableStatus = new javax.swing.JLabel();
        noPersonTableStatus = new javax.swing.JLabel();
        noEncounterTableStatus = new javax.swing.JLabel();
        btnPerson = new javax.swing.JButton();
        btnPatient = new javax.swing.JButton();
        btnDoctor = new javax.swing.JButton();
        btnHospital = new javax.swing.JButton();
        btnCommunity = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        sysadminJLayeredPane = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        personJPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        personTable = new javax.swing.JTable();
        lblPersontitle = new javax.swing.JLabel();
        patientJPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        txtPatientWeight = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        txtSearchPatientID = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        lblPatientID = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        txtPatientHeight = new javax.swing.JTextField();
        lblWeight = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lblEncounterHistorytitle = new javax.swing.JLabel();
        lblLastVisit = new javax.swing.JLabel();
        txtLastVisit = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPatientGender = new javax.swing.JTextField();
        txtPatientAge = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPatientBloodGroup = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        patientModifyJPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        txtPatientGenderModify = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtPatientNameModify = new javax.swing.JTextField();
        txtPatientIDModify = new javax.swing.JTextField();
        txtPersonIdModify = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtCityModify = new javax.swing.JTextField();
        zipCodeLabel = new javax.swing.JLabel();
        txtZipCodeModify = new javax.swing.JTextField();
        btnModifySubmit = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtCommunityModify = new javax.swing.JTextField();
        txtPatientWeightModify = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtPatientHeightModify = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtAddressModify = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtPhoneModify = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtEmailModify = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();

        tableRecordsStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableRecordsStatus.setText("No records available");

        ageGroupTableStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ageGroupTableStatus.setText("Please select an age group!");

        noPatientTableStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noPatientTableStatus.setText("No patient record available");

        noPersonTableStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noPersonTableStatus.setText("No person record available");

        noEncounterTableStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noEncounterTableStatus.setText("No encounter record available");

        btnPerson.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnPerson.setText("Person");
        btnPerson.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonActionPerformed(evt);
            }
        });

        btnPatient.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnPatient.setText("Patient");
        btnPatient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientActionPerformed(evt);
            }
        });

        btnDoctor.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnDoctor.setText("Doctor");
        btnDoctor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoctorActionPerformed(evt);
            }
        });

        btnHospital.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnHospital.setText("Hospital");
        btnHospital.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalActionPerformed(evt);
            }
        });

        btnCommunity.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnCommunity.setText("Community");
        btnCommunity.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCommunityActionPerformed(evt);
            }
        });

        btnLogOut.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnLogOut.setText("Log Out");
        btnLogOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        sysadminJLayeredPane.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 843, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 547, Short.MAX_VALUE)
        );

        sysadminJLayeredPane.add(jPanel1, "card2");

        personTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Patient ID", "Name", "Age", "Gender", "Phone No.", "Visits"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        personTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(personTable);

        lblPersontitle.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        lblPersontitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersontitle.setText("PERSON CATALOG");

        javax.swing.GroupLayout personJPanelLayout = new javax.swing.GroupLayout(personJPanel);
        personJPanel.setLayout(personJPanelLayout);
        personJPanelLayout.setHorizontalGroup(
            personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personJPanelLayout.createSequentialGroup()
                .addContainerGap(307, Short.MAX_VALUE)
                .addComponent(lblPersontitle, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(306, 306, 306))
            .addGroup(personJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        personJPanelLayout.setVerticalGroup(
            personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personJPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblPersontitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        sysadminJLayeredPane.add(personJPanel, "card3");

        patientTable.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Heart Rate", "O2 %", "Temperature", "Systolic BP", "Diastolic BP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(patientTable);

        txtPatientWeight.setEditable(false);
        txtPatientWeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnSearch.setBackground(new java.awt.Color(33, 150, 243));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnModify.setBackground(new java.awt.Color(92, 184, 92));
        btnModify.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnModify.setForeground(new java.awt.Color(255, 255, 255));
        btnModify.setText("Modify");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(209, 26, 42));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblPatientID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPatientID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientID.setText("Patient ID:");

        lblHeight.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblHeight.setText("Height:");

        txtPatientHeight.setEditable(false);
        txtPatientHeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblWeight.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblWeight.setText("Weight:");

        txtAddress.setEditable(false);
        txtAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblAge.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblAge.setText("Age:");

        lblName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblName.setText("Name:");

        txtPatientName.setEditable(false);
        txtPatientName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });

        lblEncounterHistorytitle.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblEncounterHistorytitle.setText("ENCOUNTER HISTORY");

        lblLastVisit.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblLastVisit.setText("Last Visit:");

        txtLastVisit.setEditable(false);
        txtLastVisit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtPhone.setEditable(false);
        txtPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText("Email:");

        txtEmail.setEditable(false);
        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("Gender:");

        txtPatientGender.setEditable(false);
        txtPatientGender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtPatientAge.setEditable(false);
        txtPatientAge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel10.setText("Address:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel9.setText("Blood Group:");

        txtPatientBloodGroup.setEditable(false);
        txtPatientBloodGroup.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setText("Phone:");

        javax.swing.GroupLayout patientJPanelLayout = new javax.swing.GroupLayout(patientJPanel);
        patientJPanel.setLayout(patientJPanelLayout);
        patientJPanelLayout.setHorizontalGroup(
            patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientJPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jSeparator2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEncounterHistorytitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1)
                .addGap(27, 27, 27))
            .addGroup(patientJPanelLayout.createSequentialGroup()
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientJPanelLayout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(lblPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txtSearchPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patientJPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(patientJPanelLayout.createSequentialGroup()
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, patientJPanelLayout.createSequentialGroup()
                                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLastVisit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(patientJPanelLayout.createSequentialGroup()
                                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52)
                                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(patientJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(patientJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(txtPatientName)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblHeight, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblWeight, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPatientWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
            .addGroup(patientJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(patientJPanelLayout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(252, 252, 252))
        );

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel5, jLabel6, jLabel8, jLabel9, lblAge, lblHeight, lblLastVisit, lblName, lblWeight});

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtEmail, txtLastVisit, txtPatientGender, txtPhone});

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnModify, btnSearch, lblPatientID});

        patientJPanelLayout.setVerticalGroup(
            patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientJPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(patientJPanelLayout.createSequentialGroup()
                        .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientJPanelLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(txtLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(patientJPanelLayout.createSequentialGroup()
                                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(patientJPanelLayout.createSequentialGroup()
                                        .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(patientJPanelLayout.createSequentialGroup()
                                        .addComponent(lblLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(patientJPanelLayout.createSequentialGroup()
                            .addGap(78, 78, 78)
                            .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPatientHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPatientWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(patientJPanelLayout.createSequentialGroup()
                            .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPatientBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(29, 29, 29)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModify))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEncounterHistorytitle, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel10, jLabel5, jLabel6, jLabel8, jLabel9, lblAge, lblHeight, lblLastVisit, lblName, lblWeight, txtAddress, txtEmail, txtLastVisit, txtPatientAge, txtPatientBloodGroup, txtPatientGender, txtPatientHeight, txtPatientName, txtPatientWeight, txtPhone});

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnModify, btnSearch, lblPatientID, txtSearchPatientID});

        sysadminJLayeredPane.add(patientJPanel, "card4");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Gender:");

        txtPatientGenderModify.setEditable(false);
        txtPatientGenderModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientGenderModifyActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("MODIFY");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Person ID:");

        txtPatientNameModify.setEditable(false);
        txtPatientNameModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameModifyActionPerformed(evt);
            }
        });

        txtPatientIDModify.setEditable(false);

        txtPersonIdModify.setEditable(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Patient ID:");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("City:");

        txtCityModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityModifyActionPerformed(evt);
            }
        });

        zipCodeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        zipCodeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        zipCodeLabel.setText("ZipCode:");

        btnModifySubmit.setBackground(new java.awt.Color(92, 184, 92));
        btnModifySubmit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnModifySubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnModifySubmit.setText("SUBMIT");
        btnModifySubmit.setBorder(null);
        btnModifySubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifySubmitActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Community:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Name:");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Height:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Weight:");

        txtAddressModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressModifyActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("Address:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Phone:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Email:");

        jLabel21.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("DETAILS");

        javax.swing.GroupLayout patientModifyJPanelLayout = new javax.swing.GroupLayout(patientModifyJPanel);
        patientModifyJPanel.setLayout(patientModifyJPanelLayout);
        patientModifyJPanelLayout.setHorizontalGroup(
            patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21)
                .addGap(12, 12, 12)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(188, 188, 188))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                            .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(txtAddressModify)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel25))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(txtPatientHeightModify)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel23))
                                .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtEmailModify, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(43, 43, 43)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(txtCityModify, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(zipCodeLabel)))
                            .addGap(18, 18, 18)
                            .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPhoneModify)
                                .addComponent(txtPatientWeightModify, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCommunityModify, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtZipCodeModify, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                            .addGap(336, 336, 336)
                            .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnModifySubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(104, 104, 104)))
                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(14, 14, 14)
                            .addComponent(txtPatientIDModify, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(50, 50, 50)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPatientNameModify, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPersonIdModify, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(52, 52, 52)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPatientGenderModify))))
                .addGap(80, 80, 80))
        );

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnModifySubmit, jLabel21, jLabel3});

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel14, jLabel16, jLabel17, jLabel18, jLabel19, jLabel20, jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, zipCodeLabel});

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAddressModify, txtCityModify, txtCommunityModify, txtEmailModify, txtPatientGenderModify, txtPatientHeightModify, txtPatientIDModify, txtPatientNameModify, txtPatientWeightModify, txtPersonIdModify, txtPhoneModify, txtZipCodeModify});

        patientModifyJPanelLayout.setVerticalGroup(
            patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPatientNameModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtPatientIDModify, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPersonIdModify, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPatientGenderModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)))))
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailModify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneModify, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtPatientHeightModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientWeightModify, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressModify, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCommunityModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCityModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtZipCodeModify, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModifySubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnModifySubmit, jLabel21, jLabel3});

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel14, jLabel16, jLabel17, jLabel18, jLabel19, jLabel20, jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, txtEmailModify, zipCodeLabel});

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtPatientGenderModify, txtPatientIDModify, txtPatientNameModify, txtPersonIdModify});

        sysadminJLayeredPane.add(patientModifyJPanel, "card5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btnPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btnDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btnHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btnCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(sysadminJLayeredPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCommunity, btnDoctor, btnHospital, btnLogOut, btnPatient, btnPerson});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCommunity)
                    .addComponent(btnPatient)
                    .addComponent(btnLogOut)
                    .addComponent(btnPerson)
                    .addComponent(btnDoctor)
                    .addComponent(btnHospital))
                .addGap(18, 18, 18)
                .addComponent(sysadminJLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCommunity, btnDoctor, btnHospital, btnLogOut, btnPatient, btnPerson});

    }// </editor-fold>//GEN-END:initComponents

    private void btnPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonActionPerformed
        displayPanel(sysadminJLayeredPane, personJPanel);
        populatePersonCatalog();
    }//GEN-LAST:event_btnPersonActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
//        emptyTable(communityTable);
        emptyTable(patientTable);
        HomeJPanel hjp = new HomeJPanel(layeredPane, system);
        displayPanel(layeredPane, hjp);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientActionPerformed
//        emptyTable(communityTable);
        emptyTable(patientTable);
        resetPatientView();
        displayPanel(sysadminJLayeredPane, patientJPanel);
    }//GEN-LAST:event_btnPatientActionPerformed

    private void btnCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCommunityActionPerformed

//        below18.setSelected(false);
//        between18_60.setSelected(false);
//        above60.setSelected(false);
//        emptyTable(communityTable);
//        emptyTable(patientTable);
//        cityComboBox.removeAllItems();
//        communityComboBox.removeAllItems();
//        cityComboBox.addItem("Select");
//        cityComboBox.addItem("All");
//        for (City c : system.getCities()) {
//            cityComboBox.addItem(c.getName());
//        }
//        displayPanel(dashboardLayerdPane, communityBased);
    }//GEN-LAST:event_btnCommunityActionPerformed

    private void btnDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDoctorActionPerformed

    private void btnHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHospitalActionPerformed

    private void personTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personTableMouseClicked
        int row = personTable.rowAtPoint(evt.getPoint());
        if (!personTable.getModel().getValueAt(row, 1).equals("-")) {
            int id = (int) personTable.getModel().getValueAt(row, 1);
            Utils.copyToClipboard(id);
            return;
        }
        int id = (int) personTable.getModel().getValueAt(row, 0);
        Utils.copyToClipboard(id);
    }//GEN-LAST:event_personTableMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        int id = -1;
        try {
            id = Integer.parseInt(txtSearchPatientID.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct ID!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        currentPatient = system.getPatientDirectory().getPatient(id);
        if (currentPatient == null) {
            JOptionPane.showMessageDialog(this, "Patient ID doesn't exist!!", "Error", JOptionPane.ERROR_MESSAGE);
            resetPatientView();
            return;
        }

        txtPatientName.setText(currentPatient.getName());
        txtPatientAge.setText(String.valueOf(Utils.ageCalculator(currentPatient.getDateOfBirth())));
        txtPatientBloodGroup.setText(currentPatient.getBloodGroup());
        txtPatientGender.setText(currentPatient.getGender());
        txtPatientHeight.setText(String.valueOf(currentPatient.getHeight()));
        txtPatientWeight.setText(String.valueOf(currentPatient.getWeight()));
        txtPhone.setText(String.valueOf(currentPatient.getPhoneNumber()));
        txtEmail.setText(currentPatient.getEmail());
        String addressData = String.valueOf(currentPatient.getHouse().getHouseNumber()) + ", "
        + currentPatient.getHouse().getCommunity() + ", "
        + currentPatient.getHouse().getCity() + " - "
        + String.format("%05d", currentPatient.getHouse().getZip());
        txtAddress.setText(addressData);

        int size = currentPatient.getEncounterHistory().getEncounters().size();

        if (size == 0) {
            txtLastVisit.setText("Never");
        } else {
            txtLastVisit.setText(sDF.format(currentPatient.getEncounterHistory().getEncounters().get(size - 1).getVisitDate()));
        }

        List<Object[]> data = new ArrayList<>();
        for (int i = size - 1; i >= 0; i--) {
            Object[] temp = new Object[6];
            temp[0] = sDF.format(currentPatient.getEncounterHistory().getEncounters().get(i).getVisitDate());
            temp[1] = currentPatient.getEncounterHistory().getEncounters().get(i).getHeartRate();
            temp[2] = currentPatient.getEncounterHistory().getEncounters().get(i).getOxygenLevel();
            temp[3] = currentPatient.getEncounterHistory().getEncounters().get(i).getTemperature();
            temp[4] = currentPatient.getEncounterHistory().getEncounters().get(i).gethBloodPressure();
            //            System.out.println(temp[4]);
            temp[5] = currentPatient.getEncounterHistory().getEncounters().get(i).getlBloodPressure();
            //            System.out.println(temp[5]);
            data.add(temp);
        }

        patientTable.remove(noEncounterTableStatus);
        patientTable.setFillsViewportHeight(false);
        populateTable(patientTable, data);
        if (((DefaultTableModel) patientTable.getModel()).getRowCount() == 0) {
            patientTable.add(noEncounterTableStatus);
            patientTable.setFillsViewportHeight(true);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
//        emptyTable(communityTable);
        emptyTable(patientTable);
        if (currentPatient == null) {
            JOptionPane.showMessageDialog(this, "No patient id provided!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        displayPanel(sysadminJLayeredPane, patientModifyJPanel);
        resetPatientView();
        currentModifyPatientID = currentPatient.getPatientID();
        txtPatientIDModify.setText(String.valueOf(currentModifyPatientID));
        txtPatientNameModify.setText(currentPatient.getName());
        txtPatientGenderModify.setText(currentPatient.getGender());
        txtEmailModify.setText(currentPatient.getEmail());
        txtAddressModify.setText(String.valueOf(currentPatient.getHouse().getHouseNumber()));
        txtZipCodeModify.setText(String.valueOf(currentPatient.getHouse().getZip()));
        txtPhoneModify.setText(String.valueOf(currentPatient.getPhoneNumber()));
        txtCommunityModify.setText(currentPatient.getHouse().getCommunity());
        txtPatientHeightModify.setText(String.valueOf(currentPatient.getHeight()));
        txtPatientWeightModify.setText(String.valueOf(currentPatient.getWeight()));
        txtCityModify.setText(currentPatient.getHouse().getCity());
        txtPersonIdModify.setText(String.valueOf(currentPatient.getPersonId()));
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (currentPatient == null) {
            JOptionPane.showMessageDialog(this, "Please select patient details to delete!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int result = JOptionPane.showConfirmDialog(this, "Do you want to delete patient with ID:" + currentPatient.getPatientID(), "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            system.getPatientDirectory().removePatient(currentPatient.getPatientID());
            resetPatientView();
            JOptionPane.showMessageDialog(this, "Patient deleted successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
            //            if (system.getPatientDirectory().getPatientIDs().size() != 0) {
                //                Utils.copyToClipboard(system.getPatientDirectory().getPatientIDs().get(0));
                //            }else{
                //                Utils.copyToClipboard("");
                //            }
            currentPatient = null;
            currentModifyPatientID = 0;
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientNameActionPerformed

    private void txtAddressModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressModifyActionPerformed

    private void btnModifySubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifySubmitActionPerformed
        int hNo = -1;

        try {
            hNo = Integer.parseInt(txtAddressModify.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide House Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getPatientDirectory().getPatient(currentModifyPatientID).getHouse().setHouseNumber(hNo);

        float height = -1;
        float weight = -1;

        try {
            height = Float.parseFloat(txtPatientHeightModify.getText());
            weight = Float.parseFloat(txtPatientWeightModify.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide weight and height in numerics!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getPatientDirectory().getPatient(currentModifyPatientID).setHeight(height);
        system.getPatientDirectory().getPatient(currentModifyPatientID).setWeight(weight);

        int zipCode = -1;

        try {
            zipCode = Integer.parseInt(txtZipCodeModify.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide zip code as numbers!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getPatientDirectory().getPatient(currentModifyPatientID).getHouse().setZip(zipCode);

        String regex = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(txtEmailModify.getText());

        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this, "Please provide city!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getPatientDirectory().getPatient(currentModifyPatientID).setEmail(txtEmailModify.getText());

        long phno = -1;

        try {
            phno = Long.parseLong(txtPhoneModify.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct phone Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getPatientDirectory().getPatient(currentModifyPatientID).setPhoneNumber(phno);

        if (txtCommunityModify.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please provide community!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        House house = system.getPatientDirectory().getPatient(currentModifyPatientID).getHouse();
        String oldCommunity = house.getCommunity();
        String oldCity = house.getCity();
        if (!oldCity.equalsIgnoreCase(txtCityModify.getText())
            || !oldCommunity.equalsIgnoreCase(txtCommunityModify.getText())) {
            system.getCity(oldCity).getCommunity(oldCommunity).removeHouse(house);
            system.getCity(txtCityModify.getText()).getCommunity(txtCommunityModify.getText()).addCommunityHouse(house);
            system.getPatientDirectory().getPatient(currentModifyPatientID).getHouse().setCommunity(txtCommunityModify.getText());
            system.getPatientDirectory().getPatient(currentModifyPatientID).getHouse().setCity(txtCityModify.getText());
        }

        Person person = Utils.patientToPerson(system.getPatientDirectory().getPatient(currentModifyPatientID));

        system.getPersonDirectory().replacePerson(person);

        JOptionPane.showMessageDialog(this, "Patient Details Updated successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
        displayPanel(sysadminJLayeredPane, patientJPanel);
        currentPatient = null;
        txtSearchPatientID.setText(String.valueOf(currentModifyPatientID));
        btnSearch.doClick();

        currentModifyPatientID = 0;
    }//GEN-LAST:event_btnModifySubmitActionPerformed

    private void txtCityModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityModifyActionPerformed

    private void txtPatientNameModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientNameModifyActionPerformed

    private void txtPatientGenderModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientGenderModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientGenderModifyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageGroupTableStatus;
    private javax.swing.JButton btnCommunity;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDoctor;
    private javax.swing.JButton btnHospital;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnModifySubmit;
    private javax.swing.JButton btnPatient;
    private javax.swing.JButton btnPerson;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblEncounterHistorytitle;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblLastVisit;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPersontitle;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel noEncounterTableStatus;
    private javax.swing.JLabel noPatientTableStatus;
    private javax.swing.JLabel noPersonTableStatus;
    private javax.swing.JPanel patientJPanel;
    private javax.swing.JPanel patientModifyJPanel;
    private javax.swing.JTable patientTable;
    private javax.swing.JPanel personJPanel;
    private javax.swing.JTable personTable;
    private javax.swing.JLayeredPane sysadminJLayeredPane;
    private javax.swing.JLabel tableRecordsStatus;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAddressModify;
    private javax.swing.JTextField txtCityModify;
    private javax.swing.JTextField txtCommunityModify;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmailModify;
    private javax.swing.JTextField txtLastVisit;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientBloodGroup;
    private javax.swing.JTextField txtPatientGender;
    private javax.swing.JTextField txtPatientGenderModify;
    private javax.swing.JTextField txtPatientHeight;
    private javax.swing.JTextField txtPatientHeightModify;
    private javax.swing.JTextField txtPatientIDModify;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientNameModify;
    private javax.swing.JTextField txtPatientWeight;
    private javax.swing.JTextField txtPatientWeightModify;
    private javax.swing.JTextField txtPersonIdModify;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPhoneModify;
    private javax.swing.JTextField txtSearchPatientID;
    private javax.swing.JTextField txtZipCodeModify;
    private javax.swing.JLabel zipCodeLabel;
    // End of variables declaration//GEN-END:variables

    HashMap<String, List<Patient>> patientsNormal;
    HashMap<String, List<Patient>> patientsAbNormal;
    int currentModifyPatientID;
    
    public void displayPanel(JLayeredPane lpane, JPanel panel) {
        lpane.removeAll();
        lpane.add(panel);
        lpane.repaint();
        lpane.revalidate();
    }
    
    private void emptyPersonBased() {
        txtPatientName.setText("");
        txtPatientGender.setText("");
        txtPatientAge.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtPatientBloodGroup.setText("");
        txtAddress.setText("");
        txtPatientHeight.setText("");
        txtPatientWeight.setText("");
        txtLastVisit.setText("");
    }

    private void emptyTable(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }

    private void populateTable(JTable table, List<Object[]> objs) {
        int rowCount = table.getRowCount();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (Object[] c : objs) {
            model.addRow(c);
        }
        table.setModel(model);
    }

    private void populateCommunityTableModel(JTable table, List<Patient> patients) {
        int rowCount = table.getRowCount();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        //model.setRowCount(0);
        for (Patient p : patients) {
            int size = p.getEncounterHistory().getEncounters().size();
            sDF.setLenient(false);
            Object[] c = new Object[8];
            c[0] = p.getPatientID();
            c[1] = p.getName();
            c[2] = Utils.ageCalculator(p.getDateOfBirth());
            c[3] = p.getEncounterHistory().getEncounters().get(size - 1).getHeartRate();
            c[4] = p.getEncounterHistory().getEncounters().get(size - 1).getOxygenLevel();
            c[5] = p.getEncounterHistory().getEncounters().get(size - 1).getTemperature();
            c[6] = p.getEncounterHistory().getEncounters().get(size - 1).gethBloodPressure();
            c[7] = p.getEncounterHistory().getEncounters().get(size - 1).getlBloodPressure();
            model.addRow(c);
        }
        table.setModel(model);
    }

    public void resetPatientView() {
        txtPatientName.setText("");
        txtPatientGender.setText("");
        txtPatientAge.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtPatientBloodGroup.setText("");
        txtAddress.setText("");
        txtPatientHeight.setText("");
        txtPatientWeight.setText("");
        txtLastVisit.setText("");
        emptyTable(patientTable);
    }

    public void populatePersonCatalog() {

        JTable table = personTable;
        table.remove(noPersonTableStatus);
        table.setFillsViewportHeight(false);

        int rowCount = table.getRowCount();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (Person p : system.getPersonDirectory().getPersons()) {
            int displayPatientID = -1;
            int visits = -1;
            if (system.getPatientDirectory().getPersonIDs().contains(p.getPersonId())) {

                displayPatientID = system.getPatientDirectory().getPatientId(p.getPersonId());

                visits = system.getPatientDirectory().getPatient(displayPatientID).getEncounterHistory().
                        getEncounters().size();
            }

            Object[] c = new Object[7];
            c[0] = p.getPersonId();
            if (displayPatientID != -1) {
                c[1] = displayPatientID;
                c[6] = visits;
            } else {
                c[1] = "-";
                c[6] = "-";

            }

            c[2] = p.getName();
            c[3] = Utils.ageCalculator(p.getDateOfBirth());
            c[4] = p.getGender();
            c[5] = p.getPhoneNumber();

            model.addRow(c);
        }
        table.setModel(model);
        if (table.getRowCount() == 0) {
            table.add(tableRecordsStatus);
            table.setFillsViewportHeight(true);
        }

        if (model.getRowCount() == 0) {
            table.add(noPersonTableStatus);
            table.setFillsViewportHeight(true);
        }

    }
}
