/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.*;

/**
 *
 * @author UddhavZ
 */
public class SysAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SysAdminJPanel
     */
    ManagementSystem system;
    JLayeredPane layeredPane;
    Patient currentPatient;
    Hospital currentHospital;
    Hospital newHospital;
    Doctor currentDoctor;
    Person newPerson;
    Person selectedPerson = new Person();

    String pattern = "MM/dd/yyyy hh:mm:ss";
    SimpleDateFormat sDF = new SimpleDateFormat(pattern);
    
    
    public SysAdminJPanel(JLayeredPane layeredPane, ManagementSystem system) {
        initComponents();
        this.layeredPane = layeredPane;
        this.system = system;
        emptyPersonBased();
        sDF.setLenient(false);
        currentModifyPatientID = 0;
        currentModifyDoctorID = 0;
        populatePersonCatalog();
        populateHospitalCatalog();
        tableRecordsStatus.setSize(tableRecordsStatus.getPreferredSize());
        ageGroupTableStatus.setSize(ageGroupTableStatus.getPreferredSize());
        noPersonTableStatus.setSize(noPersonTableStatus.getPreferredSize());
        noHospitalTableStatus.setSize(noHospitalTableStatus.getPreferredSize());
        noPatientTableStatus.setSize(noPatientTableStatus.getPreferredSize());
        noEncounterTableStatus.setSize(noEncounterTableStatus.getPreferredSize());
        
        ImageIcon ii = new ImageIcon("sysadmin.jpg");
        Image img1 = ii.getImage().getScaledInstance(550, 459,Image.SCALE_SMOOTH);
        jLabel2.setIcon(new ImageIcon(img1));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableRecordsStatus = new javax.swing.JLabel();
        ageGroupTableStatus = new javax.swing.JLabel();
        noPatientTableStatus = new javax.swing.JLabel();
        noPersonTableStatus = new javax.swing.JLabel();
        noEncounterTableStatus = new javax.swing.JLabel();
        CreategenderRadioButtonGroup = new javax.swing.ButtonGroup();
        noHospitalTableStatus = new javax.swing.JLabel();
        btnPerson = new javax.swing.JButton();
        btnPatient = new javax.swing.JButton();
        btnDoctor = new javax.swing.JButton();
        btnHospital = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        sysadminJLayeredPane = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        personJPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        personTable = new javax.swing.JTable();
        lblPersontitle = new javax.swing.JLabel();
        btnAddPerson = new javax.swing.JButton();
        btnAddAsPatient = new javax.swing.JButton();
        patientID = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        personAddJPanel = new javax.swing.JPanel();
        lblCreateBloodGroup = new javax.swing.JLabel();
        lblCreateDOB = new javax.swing.JLabel();
        txtCreatepatientDOB = new javax.swing.JTextField();
        lblCreateGender = new javax.swing.JLabel();
        lblCreateWeight = new javax.swing.JLabel();
        txtCreatepatientWeight = new javax.swing.JTextField();
        lblCreateHeight = new javax.swing.JLabel();
        txtCreatepatientHeight = new javax.swing.JTextField();
        lblCreateName = new javax.swing.JLabel();
        txtCreatepatientName = new javax.swing.JTextField();
        CreatemaleRadioButton = new javax.swing.JRadioButton();
        CreatefemaleRadioButton = new javax.swing.JRadioButton();
        CreateothersRadioButton = new javax.swing.JRadioButton();
        txtCreatepatientBloodGroup = new javax.swing.JComboBox<>();
        lblCreatekgs = new javax.swing.JLabel();
        lblCreatecms = new javax.swing.JLabel();
        lblPersonalDetails = new javax.swing.JLabel();
        txtCreatecommunity = new javax.swing.JTextField();
        lblCreateCommunity = new javax.swing.JLabel();
        lblCreateCity = new javax.swing.JLabel();
        txtCreatecity = new javax.swing.JTextField();
        lblCreateEmail = new javax.swing.JLabel();
        txtCreateemail = new javax.swing.JTextField();
        lblCreateZipcode = new javax.swing.JLabel();
        txtCreatezip = new javax.swing.JTextField();
        lblCreatePhone = new javax.swing.JLabel();
        lblCreateAddress = new javax.swing.JLabel();
        txtCreatephone = new javax.swing.JTextField();
        txtCreateaddress = new javax.swing.JTextField();
        lblPersonalDetails1 = new javax.swing.JLabel();
        btnCreatesubmitButton = new javax.swing.JButton();
        patientJPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        txtPatientWeight = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        txtSearchPatientID = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        lblPatientID = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        txtPatientHeight = new javax.swing.JTextField();
        lblWeight = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lblEncounterHistorytitle = new javax.swing.JLabel();
        lblLastVisit = new javax.swing.JLabel();
        txtLastVisit = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPatientGender = new javax.swing.JTextField();
        txtPatientAge = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPatientBloodGroup = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        patientModifyJPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        txtPatientGenderModify = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtPatientNameModify = new javax.swing.JTextField();
        txtPatientIDModify = new javax.swing.JTextField();
        txtPersonIdModify = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtCityModify = new javax.swing.JTextField();
        zipCodeLabel = new javax.swing.JLabel();
        txtZipCodeModify = new javax.swing.JTextField();
        btnModifySubmit = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtCommunityModify = new javax.swing.JTextField();
        txtPatientWeightModify = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtPatientHeightModify = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtAddressModify = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtPhoneModify = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtEmailModify = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        doctorCreateJpanel = new javax.swing.JPanel();
        lblCreateCommunity1 = new javax.swing.JLabel();
        lblCreateCity1 = new javax.swing.JLabel();
        txtCreateDoctorCity = new javax.swing.JTextField();
        lblCreateEmail1 = new javax.swing.JLabel();
        lblCreateBloodGroup1 = new javax.swing.JLabel();
        txtCreateDoctorEmail = new javax.swing.JTextField();
        lblCreateDOB1 = new javax.swing.JLabel();
        lblCreateZipcode1 = new javax.swing.JLabel();
        txtCreateDoctorDOB = new javax.swing.JTextField();
        txtCreateDoctorZip = new javax.swing.JTextField();
        lblCreateGender1 = new javax.swing.JLabel();
        lblCreatePhone1 = new javax.swing.JLabel();
        lblCreateWeight1 = new javax.swing.JLabel();
        lblCreateAddress1 = new javax.swing.JLabel();
        txtCreateDoctorWeight = new javax.swing.JTextField();
        txtCreateDoctorPhone = new javax.swing.JTextField();
        lblCreateHeight1 = new javax.swing.JLabel();
        txtCreateDoctorHeight = new javax.swing.JTextField();
        txtCreateDoctorAddress = new javax.swing.JTextField();
        lblPersonalDetails2 = new javax.swing.JLabel();
        lblCreateName1 = new javax.swing.JLabel();
        btnCreateDocsubmitButton1 = new javax.swing.JButton();
        txtCreateDoctorName = new javax.swing.JTextField();
        rbCreateDoctorMale = new javax.swing.JRadioButton();
        rbCreateDoctorFemale = new javax.swing.JRadioButton();
        rbCreateDoctorOther = new javax.swing.JRadioButton();
        cbCreateDoctorBloodGroup1 = new javax.swing.JComboBox<>();
        lblCreatekgs1 = new javax.swing.JLabel();
        lblCreatecms1 = new javax.swing.JLabel();
        lblPersonalDetails3 = new javax.swing.JLabel();
        txtCreateDoctorCommunity = new javax.swing.JTextField();
        txtCreateDoctorType = new javax.swing.JTextField();
        lblCreateDocType = new javax.swing.JLabel();
        txtCreateDoctorDesignation = new javax.swing.JTextField();
        lblCreateName3 = new javax.swing.JLabel();
        lblCreateDocType1 = new javax.swing.JLabel();
        txtCreateDoctorQuali = new javax.swing.JTextField();
        doctorModifyJPanel = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        txtModDocGender = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtModDocName = new javax.swing.JTextField();
        txtModDocDoctorID = new javax.swing.JTextField();
        txtModDocPersonID = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtModDocCity = new javax.swing.JTextField();
        zipCodeLabel1 = new javax.swing.JLabel();
        txtModDocZip = new javax.swing.JTextField();
        btnModDocSubmit = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        txtModDocCommunity = new javax.swing.JTextField();
        txtModDocWeight = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtModDocHeight = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtModDocAddress = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtModDocPhone = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        txtModDocEmail = new javax.swing.JTextField();
        jSeparator10 = new javax.swing.JSeparator();
        txtModDocType = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        txtModDocDesignation = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txtModDocQuali = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        doctorJPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnDocDelete = new javax.swing.JButton();
        txtDoctorBloodGroup = new javax.swing.JTextField();
        lblPatientID1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblHeight1 = new javax.swing.JLabel();
        txtDoctorHeight = new javax.swing.JTextField();
        lblWeight1 = new javax.swing.JLabel();
        txtDoctorAddress = new javax.swing.JTextField();
        lblAge1 = new javax.swing.JLabel();
        lblName1 = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblLastVisit1 = new javax.swing.JLabel();
        txtDoctorQualification = new javax.swing.JTextField();
        txtDoctorPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDoctorEmail = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtDoctorGender = new javax.swing.JTextField();
        txtDoctorWeight = new javax.swing.JTextField();
        txtDoctorAge = new javax.swing.JTextField();
        btnDoctorSearch = new javax.swing.JButton();
        btnDocModify = new javax.swing.JButton();
        txtSearchDoctorID = new javax.swing.JTextField();
        txtDoctorType = new javax.swing.JTextField();
        lblLastVisit2 = new javax.swing.JLabel();
        txtDoctorDesignation = new javax.swing.JTextField();
        lblLastVisit3 = new javax.swing.JLabel();
        btnAddNewDoctor = new javax.swing.JButton();
        hospitalJPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        txtHospitalName = new javax.swing.JTextField();
        lblCreateName2 = new javax.swing.JLabel();
        txtHospitalEstablishedIn = new javax.swing.JTextField();
        lblCreateDOB2 = new javax.swing.JLabel();
        txtHospitalAddress = new javax.swing.JTextField();
        txtHospitalCity = new javax.swing.JTextField();
        txtHospitalEmail = new javax.swing.JTextField();
        lblCreateEmail2 = new javax.swing.JLabel();
        lblCreateCity2 = new javax.swing.JLabel();
        lblCreateAddress2 = new javax.swing.JLabel();
        txtHospitalZip = new javax.swing.JTextField();
        lblCreateZipcode2 = new javax.swing.JLabel();
        txtHospitalPhone = new javax.swing.JTextField();
        lblCreatePhone2 = new javax.swing.JLabel();
        lblCreateCommunity2 = new javax.swing.JLabel();
        txtHospitalCommunity = new javax.swing.JTextField();
        btnHospitalUpdate = new javax.swing.JButton();
        btnHospitalDelete = new javax.swing.JButton();
        btnHospitalSearch = new javax.swing.JButton();
        txtHospitalSearch = new javax.swing.JTextField();
        lblPatientID2 = new javax.swing.JLabel();
        btnHospitalAddNew = new javax.swing.JButton();
        hospitalCreateJPanel = new javax.swing.JPanel();
        txtCreateHospitalCommunity = new javax.swing.JTextField();
        lblCreateCommunity3 = new javax.swing.JLabel();
        txtCreateHospitalEstablishedIn = new javax.swing.JTextField();
        lblCreatePhone3 = new javax.swing.JLabel();
        lblCreateName4 = new javax.swing.JLabel();
        txtCreateHospitalName = new javax.swing.JTextField();
        lblCreateEmail3 = new javax.swing.JLabel();
        txtCreateHospitalEmail = new javax.swing.JTextField();
        txtCreateHospitalCity = new javax.swing.JTextField();
        txtCreateHospitalAddress = new javax.swing.JTextField();
        lblCreateDOB3 = new javax.swing.JLabel();
        txtCreateHospitalPhone = new javax.swing.JTextField();
        lblCreateZipcode3 = new javax.swing.JLabel();
        txtCreateHospitalZip = new javax.swing.JTextField();
        lblCreateAddress3 = new javax.swing.JLabel();
        lblCreateCity3 = new javax.swing.JLabel();
        btnCreateHospitalSubmit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        tableRecordsStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableRecordsStatus.setText("No records available");

        ageGroupTableStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ageGroupTableStatus.setText("Please select an age group!");

        noPatientTableStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noPatientTableStatus.setText("No patient record available");

        noPersonTableStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noPersonTableStatus.setText("No person record available");

        noEncounterTableStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noEncounterTableStatus.setText("No encounter record available");

        noHospitalTableStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noHospitalTableStatus.setText("No patient record available");

        setBackground(new java.awt.Color(102, 102, 102));

        btnPerson.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnPerson.setText("Person");
        btnPerson.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonActionPerformed(evt);
            }
        });

        btnPatient.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnPatient.setText("Patient");
        btnPatient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientActionPerformed(evt);
            }
        });

        btnDoctor.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnDoctor.setText("Doctor");
        btnDoctor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoctorActionPerformed(evt);
            }
        });

        btnHospital.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnHospital.setText("Hospital");
        btnHospital.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalActionPerformed(evt);
            }
        });

        btnLogOut.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnLogOut.setText("Log Out");
        btnLogOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        sysadminJLayeredPane.setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
        );

        sysadminJLayeredPane.add(jPanel1, "card2");

        personJPanel.setBackground(new java.awt.Color(255, 255, 255));

        personTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Patient ID", "Doctor ID", "Name", "Age", "Gender", "Phone No.", "Visits"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        personTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(personTable);
        if (personTable.getColumnModel().getColumnCount() > 0) {
            personTable.getColumnModel().getColumn(1).setHeaderValue("Patient ID");
            personTable.getColumnModel().getColumn(2).setHeaderValue("Doctor ID");
        }

        lblPersontitle.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        lblPersontitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersontitle.setText("PERSON CATALOG");

        btnAddPerson.setText("Add new Person");
        btnAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPersonActionPerformed(evt);
            }
        });

        btnAddAsPatient.setText("Add Encounter");
        btnAddAsPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAsPatientActionPerformed(evt);
            }
        });

        jLabel42.setText("ID :");

        javax.swing.GroupLayout personJPanelLayout = new javax.swing.GroupLayout(personJPanel);
        personJPanel.setLayout(personJPanelLayout);
        personJPanelLayout.setHorizontalGroup(
            personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personJPanelLayout.createSequentialGroup()
                .addContainerGap(286, Short.MAX_VALUE)
                .addComponent(lblPersontitle, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(306, 306, 306))
            .addGroup(personJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnAddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddAsPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
            .addGroup(personJPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        personJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddAsPatient, btnAddPerson, patientID});

        personJPanelLayout.setVerticalGroup(
            personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personJPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblPersontitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel42, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAddPerson)
                        .addComponent(btnAddAsPatient)
                        .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(134, 134, 134))
        );

        personJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAddAsPatient, btnAddPerson, patientID});

        sysadminJLayeredPane.add(personJPanel, "card3");

        personAddJPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblCreateBloodGroup.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateBloodGroup.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateBloodGroup.setText("Blood Group:");

        lblCreateDOB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateDOB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateDOB.setText("Date of Birth:");

        lblCreateGender.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateGender.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateGender.setText("Gender:");

        lblCreateWeight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateWeight.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateWeight.setText("Weight:");

        lblCreateHeight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateHeight.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateHeight.setText("Height:");

        lblCreateName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateName.setText("Name:");

        CreategenderRadioButtonGroup.add(CreatemaleRadioButton);
        CreatemaleRadioButton.setText("Male");

        CreategenderRadioButtonGroup.add(CreatefemaleRadioButton);
        CreatefemaleRadioButton.setText("Female");

        CreategenderRadioButtonGroup.add(CreateothersRadioButton);
        CreateothersRadioButton.setText("Other");

        txtCreatepatientBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "O+", "O-", "A+", "A-", "B+", "B-", "AB+", "AB-" }));

        lblCreatekgs.setText("Kgs");

        lblCreatecms.setText("Cms");

        lblPersonalDetails.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        lblPersonalDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersonalDetails.setText("PERSONAL DETAILS");

        lblCreateCommunity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateCommunity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateCommunity.setText("Community:");

        lblCreateCity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateCity.setText("City:");

        lblCreateEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateEmail.setText("Email:");

        lblCreateZipcode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateZipcode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateZipcode.setText("ZipCode:");

        lblCreatePhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreatePhone.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreatePhone.setText("Phone:");

        lblCreateAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateAddress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateAddress.setText("Address:");

        lblPersonalDetails1.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        lblPersonalDetails1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersonalDetails1.setText("COMMUNICATION DETAILS");

        btnCreatesubmitButton.setBackground(new java.awt.Color(92, 184, 92));
        btnCreatesubmitButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnCreatesubmitButton.setForeground(new java.awt.Color(255, 255, 255));
        btnCreatesubmitButton.setText("SUBMIT");
        btnCreatesubmitButton.setBorder(null);
        btnCreatesubmitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreatesubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatesubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout personAddJPanelLayout = new javax.swing.GroupLayout(personAddJPanel);
        personAddJPanel.setLayout(personAddJPanelLayout);
        personAddJPanelLayout.setHorizontalGroup(
            personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personAddJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personAddJPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personAddJPanelLayout.createSequentialGroup()
                                .addComponent(lblPersonalDetails)
                                .addGap(314, 314, 314))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personAddJPanelLayout.createSequentialGroup()
                                .addComponent(btnCreatesubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(348, 348, 348))))
                    .addGroup(personAddJPanelLayout.createSequentialGroup()
                        .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(personAddJPanelLayout.createSequentialGroup()
                                .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(personAddJPanelLayout.createSequentialGroup()
                                        .addComponent(lblCreateEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCreateemail, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(personAddJPanelLayout.createSequentialGroup()
                                        .addComponent(lblCreateCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCreatecity, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(personAddJPanelLayout.createSequentialGroup()
                                        .addComponent(lblCreateAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCreateaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(personAddJPanelLayout.createSequentialGroup()
                                        .addComponent(lblCreateGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CreatemaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CreatefemaleRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CreateothersRadioButton))
                                    .addGroup(personAddJPanelLayout.createSequentialGroup()
                                        .addComponent(lblCreateDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCreatepatientDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(personAddJPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(personAddJPanelLayout.createSequentialGroup()
                                                .addComponent(lblCreateZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtCreatezip, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(personAddJPanelLayout.createSequentialGroup()
                                                .addComponent(lblCreatePhone)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtCreatephone, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(personAddJPanelLayout.createSequentialGroup()
                                                .addComponent(lblCreateCommunity)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtCreatecommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(personAddJPanelLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblCreateWeight)
                                            .addComponent(lblCreateHeight))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, personAddJPanelLayout.createSequentialGroup()
                                                .addComponent(txtCreatepatientHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblCreatecms))
                                            .addGroup(personAddJPanelLayout.createSequentialGroup()
                                                .addComponent(txtCreatepatientWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblCreatekgs)
                                                .addGap(3, 3, 3))))))
                            .addGroup(personAddJPanelLayout.createSequentialGroup()
                                .addComponent(lblCreateName, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCreatepatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCreateBloodGroup)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCreatepatientBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personAddJPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPersonalDetails1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(248, 248, 248)))
                        .addGap(0, 36, Short.MAX_VALUE))))
        );

        personAddJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblCreateBloodGroup, lblCreateHeight, lblCreateWeight, txtCreatepatientBloodGroup, txtCreatepatientHeight, txtCreatepatientWeight});

        personAddJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CreatefemaleRadioButton, CreatemaleRadioButton, CreateothersRadioButton});

        personAddJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblCreateCommunity, lblCreatePhone, lblCreateZipcode, txtCreateaddress, txtCreatecity, txtCreatecommunity, txtCreateemail, txtCreatepatientName, txtCreatephone, txtCreatezip});

        personAddJPanelLayout.setVerticalGroup(
            personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personAddJPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblPersonalDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCreateBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCreatepatientBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtCreatepatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(personAddJPanelLayout.createSequentialGroup()
                        .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCreatepatientDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CreatemaleRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCreateGender, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                            .addComponent(CreatefemaleRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CreateothersRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblCreatekgs, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, personAddJPanelLayout.createSequentialGroup()
                            .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCreatepatientWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblCreateWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6)
                            .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCreateHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCreatepatientHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblCreatecms)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(lblPersonalDetails1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreatezip, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreatecity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreatePhone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreatephone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personAddJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateemail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreatecommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreatesubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        personAddJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblCreatecms, lblCreatekgs, txtCreatepatientBloodGroup, txtCreatepatientHeight, txtCreatepatientName, txtCreatepatientWeight});

        personAddJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblCreateDOB, lblCreateGender});

        personAddJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblCreateAddress, lblCreateCommunity, lblCreatePhone, lblCreateZipcode, txtCreateaddress, txtCreatecommunity, txtCreatephone, txtCreatezip});

        sysadminJLayeredPane.add(personAddJPanel, "card6");

        patientJPanel.setBackground(new java.awt.Color(255, 255, 255));

        patientTable.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Heart Rate", "O2 %", "Temperature", "Systolic BP", "Diastolic BP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(patientTable);

        txtPatientWeight.setEditable(false);
        txtPatientWeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnSearch.setBackground(new java.awt.Color(33, 150, 243));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnModify.setBackground(new java.awt.Color(92, 184, 92));
        btnModify.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnModify.setForeground(new java.awt.Color(255, 255, 255));
        btnModify.setText("Modify");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(209, 26, 42));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblPatientID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPatientID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientID.setText("Patient ID:");

        lblHeight.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblHeight.setText("Height:");

        txtPatientHeight.setEditable(false);
        txtPatientHeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblWeight.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblWeight.setText("Weight:");

        txtAddress.setEditable(false);
        txtAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblAge.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblAge.setText("Age:");

        lblName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblName.setText("Name:");

        txtPatientName.setEditable(false);
        txtPatientName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblEncounterHistorytitle.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblEncounterHistorytitle.setText("ENCOUNTER HISTORY");

        lblLastVisit.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblLastVisit.setText("Last Visit:");

        txtLastVisit.setEditable(false);
        txtLastVisit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtPhone.setEditable(false);
        txtPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText("Email:");

        txtEmail.setEditable(false);
        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("Gender:");

        txtPatientGender.setEditable(false);
        txtPatientGender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtPatientAge.setEditable(false);
        txtPatientAge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel10.setText("Address:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel9.setText("Blood Group:");

        txtPatientBloodGroup.setEditable(false);
        txtPatientBloodGroup.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setText("Phone:");

        javax.swing.GroupLayout patientJPanelLayout = new javax.swing.GroupLayout(patientJPanel);
        patientJPanel.setLayout(patientJPanelLayout);
        patientJPanelLayout.setHorizontalGroup(
            patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(txtSearchPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientJPanelLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientJPanelLayout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, patientJPanelLayout.createSequentialGroup()
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, patientJPanelLayout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(patientJPanelLayout.createSequentialGroup()
                            .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(patientJPanelLayout.createSequentialGroup()
                                    .addComponent(lblLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(patientJPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(230, 230, 230))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblHeight, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblWeight, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(5, 5, 5)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPatientWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(237, 237, 237))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientJPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(patientJPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(lblEncounterHistorytitle)
                        .addGap(22, 22, 22)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8))
        );

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel5, jLabel6, jLabel8, jLabel9, lblAge, lblHeight, lblLastVisit, lblName, lblWeight});

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtEmail, txtLastVisit, txtPatientGender, txtPhone});

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnModify, btnSearch, lblPatientID});

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jSeparator1, jSeparator2});

        patientJPanelLayout.setVerticalGroup(
            patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientJPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(patientJPanelLayout.createSequentialGroup()
                        .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientJPanelLayout.createSequentialGroup()
                                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(patientJPanelLayout.createSequentialGroup()
                                .addComponent(lblLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(patientJPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(patientJPanelLayout.createSequentialGroup()
                            .addGap(78, 78, 78)
                            .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPatientHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPatientWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(patientJPanelLayout.createSequentialGroup()
                            .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPatientBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModify))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEncounterHistorytitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel10, jLabel5, jLabel6, jLabel8, jLabel9, lblAge, lblHeight, lblLastVisit, lblName, lblWeight, txtAddress, txtEmail, txtLastVisit, txtPatientAge, txtPatientBloodGroup, txtPatientGender, txtPatientHeight, txtPatientName, txtPatientWeight, txtPhone});

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnModify, btnSearch, lblPatientID, txtSearchPatientID});

        patientJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jSeparator1, jSeparator2});

        sysadminJLayeredPane.add(patientJPanel, "card4");

        patientModifyJPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Gender:");

        txtPatientGenderModify.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("MODIFY");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Person ID:");

        txtPatientNameModify.setEditable(false);

        txtPatientIDModify.setEditable(false);

        txtPersonIdModify.setEditable(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Patient ID:");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("City:");

        zipCodeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        zipCodeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        zipCodeLabel.setText("ZipCode:");

        btnModifySubmit.setBackground(new java.awt.Color(92, 184, 92));
        btnModifySubmit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnModifySubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnModifySubmit.setText("SUBMIT");
        btnModifySubmit.setBorder(null);
        btnModifySubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifySubmitActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Community:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Name:");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Height:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Weight:");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("Address:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Phone:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Email:");

        jLabel21.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("DETAILS");

        javax.swing.GroupLayout patientModifyJPanelLayout = new javax.swing.GroupLayout(patientModifyJPanel);
        patientModifyJPanel.setLayout(patientModifyJPanelLayout);
        patientModifyJPanelLayout.setHorizontalGroup(
            patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21)
                .addGap(12, 12, 12)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(188, 188, 188))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                            .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(txtAddressModify)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel25))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(txtPatientHeightModify)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel23))
                                .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtEmailModify, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(43, 43, 43)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(txtCityModify, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(zipCodeLabel)))
                            .addGap(18, 18, 18)
                            .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPhoneModify)
                                .addComponent(txtPatientWeightModify, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCommunityModify, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtZipCodeModify, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                            .addGap(336, 336, 336)
                            .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnModifySubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(104, 104, 104)))
                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(14, 14, 14)
                            .addComponent(txtPatientIDModify, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(50, 50, 50)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPatientNameModify, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPersonIdModify, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(52, 52, 52)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPatientGenderModify))))
                .addGap(80, 80, 80))
        );

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnModifySubmit, jLabel21, jLabel3});

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel14, jLabel16, jLabel17, jLabel18, jLabel19, jLabel20, jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, zipCodeLabel});

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAddressModify, txtCityModify, txtCommunityModify, txtEmailModify, txtPatientGenderModify, txtPatientHeightModify, txtPatientIDModify, txtPatientNameModify, txtPatientWeightModify, txtPersonIdModify, txtPhoneModify, txtZipCodeModify});

        patientModifyJPanelLayout.setVerticalGroup(
            patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPatientNameModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtPatientIDModify, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPersonIdModify, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPatientGenderModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientModifyJPanelLayout.createSequentialGroup()
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientModifyJPanelLayout.createSequentialGroup()
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)))))
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailModify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneModify, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtPatientHeightModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientWeightModify, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressModify, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCommunityModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCityModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtZipCodeModify, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModifySubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnModifySubmit, jLabel21, jLabel3});

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel14, jLabel16, jLabel17, jLabel18, jLabel19, jLabel20, jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, txtEmailModify, zipCodeLabel});

        patientModifyJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtPatientGenderModify, txtPatientIDModify, txtPatientNameModify, txtPersonIdModify});

        sysadminJLayeredPane.add(patientModifyJPanel, "card5");

        doctorCreateJpanel.setBackground(new java.awt.Color(255, 255, 255));

        lblCreateCommunity1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateCommunity1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateCommunity1.setText("Community:");

        lblCreateCity1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateCity1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateCity1.setText("City:");

        lblCreateEmail1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateEmail1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateEmail1.setText("Email:");

        lblCreateBloodGroup1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateBloodGroup1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateBloodGroup1.setText("Blood Group:");

        lblCreateDOB1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateDOB1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateDOB1.setText("Date of Birth:");

        lblCreateZipcode1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateZipcode1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateZipcode1.setText("ZipCode:");

        lblCreateGender1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateGender1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateGender1.setText("Gender:");

        lblCreatePhone1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreatePhone1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreatePhone1.setText("Phone:");

        lblCreateWeight1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateWeight1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateWeight1.setText("Weight:");

        lblCreateAddress1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateAddress1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateAddress1.setText("Address:");

        lblCreateHeight1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateHeight1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateHeight1.setText("Height:");

        lblPersonalDetails2.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        lblPersonalDetails2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersonalDetails2.setText("COMMUNICATION DETAILS");

        lblCreateName1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateName1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateName1.setText("Name:");

        btnCreateDocsubmitButton1.setBackground(new java.awt.Color(92, 184, 92));
        btnCreateDocsubmitButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnCreateDocsubmitButton1.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateDocsubmitButton1.setText("SUBMIT");
        btnCreateDocsubmitButton1.setBorder(null);
        btnCreateDocsubmitButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreateDocsubmitButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateDocsubmitButton1ActionPerformed(evt);
            }
        });

        CreategenderRadioButtonGroup.add(rbCreateDoctorMale);
        rbCreateDoctorMale.setText("Male");

        CreategenderRadioButtonGroup.add(rbCreateDoctorFemale);
        rbCreateDoctorFemale.setText("Female");

        CreategenderRadioButtonGroup.add(rbCreateDoctorOther);
        rbCreateDoctorOther.setText("Other");

        cbCreateDoctorBloodGroup1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "O+", "O-", "A+", "A-", "B+", "B-", "AB+", "AB-" }));

        lblCreatekgs1.setText("Kgs");

        lblCreatecms1.setText("Cms");

        lblPersonalDetails3.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        lblPersonalDetails3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersonalDetails3.setText("PERSONAL DETAILS");

        lblCreateDocType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateDocType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateDocType.setText("Type:");

        lblCreateName3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateName3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateName3.setText("Designation:");

        lblCreateDocType1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateDocType1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateDocType1.setText("Qualification:");

        javax.swing.GroupLayout doctorCreateJpanelLayout = new javax.swing.GroupLayout(doctorCreateJpanel);
        doctorCreateJpanel.setLayout(doctorCreateJpanelLayout);
        doctorCreateJpanelLayout.setHorizontalGroup(
            doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorCreateJpanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPersonalDetails3)
                .addGap(287, 287, 287))
            .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(lblPersonalDetails2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                            .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblCreateZipcode1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                                    .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                                            .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(lblCreateAddress1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblCreateCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtCreateDoctorAddress)
                                                .addComponent(txtCreateDoctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                                            .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblCreateEmail1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                                                    .addGap(0, 0, Short.MAX_VALUE)
                                                    .addComponent(lblCreateName3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtCreateDoctorDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtCreateDoctorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGap(47, 47, 47)
                                    .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblCreatePhone1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblCreateCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCreateDoctorPhone)
                                    .addComponent(txtCreateDoctorZip)
                                    .addComponent(txtCreateDoctorCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                                    .addComponent(lblCreateDocType, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtCreateDoctorType, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                            .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorCreateJpanelLayout.createSequentialGroup()
                                        .addComponent(lblCreateDOB1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCreateDoctorDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                                        .addComponent(lblCreateName1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCreateDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                                    .addComponent(lblCreateGender1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(rbCreateDoctorMale, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(rbCreateDoctorFemale)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(rbCreateDoctorOther)
                                    .addGap(6, 6, 6)))
                            .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                                    .addGap(64, 64, 64)
                                    .addComponent(lblCreateBloodGroup1))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorCreateJpanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblCreateWeight1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblCreateHeight1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                                    .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCreateDoctorWeight)
                                        .addComponent(txtCreateDoctorHeight))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblCreatekgs1)
                                        .addComponent(lblCreatecms1, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addComponent(cbCreateDoctorBloodGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(lblCreateDocType1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCreateDoctorQuali, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorCreateJpanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCreateDocsubmitButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(258, 258, 258)))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        doctorCreateJpanelLayout.setVerticalGroup(
            doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPersonalDetails3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCreateDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateName1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCreateDoctorDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateDOB1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(lblCreateGender1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbCreateDoctorMale)
                            .addComponent(rbCreateDoctorFemale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbCreateDoctorOther, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCreateBloodGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCreateDoctorBloodGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctorCreateJpanelLayout.createSequentialGroup()
                                .addComponent(lblCreatekgs1)
                                .addGap(18, 18, 18)
                                .addComponent(lblCreatecms1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctorCreateJpanelLayout.createSequentialGroup()
                                .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCreateDoctorWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCreateWeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCreateHeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCreateDoctorHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(35, 35, 35)
                .addComponent(lblPersonalDetails2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCreateDoctorAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCreateCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCreateDoctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCreateDoctorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(doctorCreateJpanelLayout.createSequentialGroup()
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCreateDoctorZip, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateZipcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCreatePhone1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCreateDoctorPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCreateCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCreateDoctorCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateDoctorDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateName3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateDocType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreateDoctorType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(doctorCreateJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateDocType1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreateDoctorQuali, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCreateDocsubmitButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        sysadminJLayeredPane.add(doctorCreateJpanel, "card7");

        doctorModifyJPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Gender:");

        txtModDocGender.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("MODIFY");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Person ID:");

        txtModDocName.setEditable(false);

        txtModDocDoctorID.setEditable(false);

        txtModDocPersonID.setEditable(false);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Doctor ID:");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("City:");

        zipCodeLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        zipCodeLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        zipCodeLabel1.setText("ZipCode:");

        btnModDocSubmit.setBackground(new java.awt.Color(92, 184, 92));
        btnModDocSubmit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnModDocSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnModDocSubmit.setText("SUBMIT");
        btnModDocSubmit.setBorder(null);
        btnModDocSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModDocSubmitActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Community:");

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("Name:");

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Height:");

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Weight:");

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel35.setText("Unit No:");

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Phone:");

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel37.setText("Email:");

        jLabel38.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("DETAILS");

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel39.setText("Type:");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel40.setText("Designation:");

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel41.setText("Qualification:");

        javax.swing.GroupLayout doctorModifyJPanelLayout = new javax.swing.GroupLayout(doctorModifyJPanel);
        doctorModifyJPanel.setLayout(doctorModifyJPanelLayout);
        doctorModifyJPanelLayout.setHorizontalGroup(
            doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorModifyJPanelLayout.createSequentialGroup()
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(txtModDocDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorModifyJPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txtModDocPersonID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtModDocName, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(txtModDocGender)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctorModifyJPanelLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtModDocEmail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtModDocPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                                                .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                                .addGap(153, 153, 153)
                                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                                .addComponent(txtModDocCity, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(zipCodeLabel1)))
                                        .addGap(12, 12, 12)
                                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtModDocZip, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                            .addComponent(txtModDocCommunity)))
                                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                        .addComponent(txtModDocAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                                .addComponent(txtModDocHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel34)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtModDocWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtModDocType))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtModDocDesignation, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                            .addComponent(txtModDocQuali))))))))
                .addContainerGap(111, Short.MAX_VALUE))
            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel38)
                        .addGap(12, 12, 12)
                        .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorModifyJPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnModDocSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(303, 303, 303))
        );

        doctorModifyJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel33, jLabel37});

        doctorModifyJPanelLayout.setVerticalGroup(
            doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtModDocDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtModDocName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtModDocPersonID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtModDocGender, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtModDocPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtModDocEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtModDocQuali, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtModDocWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtModDocHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtModDocType, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtModDocDesignation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtModDocAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtModDocCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtModDocZip, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDocCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipCodeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModDocSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        doctorModifyJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtModDocCity, txtModDocCommunity, txtModDocDesignation, txtModDocDoctorID, txtModDocEmail, txtModDocGender, txtModDocHeight, txtModDocName, txtModDocPersonID, txtModDocPhone, txtModDocQuali, txtModDocType, txtModDocWeight, txtModDocZip});

        sysadminJLayeredPane.add(doctorModifyJPanel, "card5");

        doctorJPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel11.setText("Address:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel12.setText("Blood Group:");

        btnDocDelete.setBackground(new java.awt.Color(209, 26, 42));
        btnDocDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDocDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDocDelete.setText("Delete");
        btnDocDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocDeleteActionPerformed(evt);
            }
        });

        txtDoctorBloodGroup.setEditable(false);
        txtDoctorBloodGroup.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblPatientID1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPatientID1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientID1.setText("Doctor ID:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel13.setText("Phone:");

        lblHeight1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblHeight1.setText("Height:");

        txtDoctorHeight.setEditable(false);
        txtDoctorHeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblWeight1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblWeight1.setText("Weight:");

        txtDoctorAddress.setEditable(false);
        txtDoctorAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblAge1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblAge1.setText("Age:");

        lblName1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblName1.setText("Name:");

        txtDoctorName.setEditable(false);
        txtDoctorName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblLastVisit1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblLastVisit1.setText("Qualification:");

        txtDoctorQualification.setEditable(false);
        txtDoctorQualification.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtDoctorPhone.setEditable(false);
        txtDoctorPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel7.setText("Email:");

        txtDoctorEmail.setEditable(false);
        txtDoctorEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel15.setText("Gender:");

        txtDoctorGender.setEditable(false);
        txtDoctorGender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtDoctorWeight.setEditable(false);
        txtDoctorWeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtDoctorAge.setEditable(false);
        txtDoctorAge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnDoctorSearch.setBackground(new java.awt.Color(33, 150, 243));
        btnDoctorSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDoctorSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnDoctorSearch.setText("Search");
        btnDoctorSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoctorSearchActionPerformed(evt);
            }
        });

        btnDocModify.setBackground(new java.awt.Color(92, 184, 92));
        btnDocModify.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDocModify.setForeground(new java.awt.Color(255, 255, 255));
        btnDocModify.setText("Modify");
        btnDocModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocModifyActionPerformed(evt);
            }
        });

        txtDoctorType.setEditable(false);
        txtDoctorType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblLastVisit2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblLastVisit2.setText("Type:");

        txtDoctorDesignation.setEditable(false);
        txtDoctorDesignation.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblLastVisit3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblLastVisit3.setText("Designation:");

        btnAddNewDoctor.setBackground(new java.awt.Color(33, 150, 243));
        btnAddNewDoctor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddNewDoctor.setForeground(new java.awt.Color(255, 255, 255));
        btnAddNewDoctor.setText("Add New Doctor");
        btnAddNewDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewDoctorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout doctorJPanelLayout = new javax.swing.GroupLayout(doctorJPanel);
        doctorJPanel.setLayout(doctorJPanelLayout);
        doctorJPanelLayout.setHorizontalGroup(
            doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorJPanelLayout.createSequentialGroup()
                .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorJPanelLayout.createSequentialGroup()
                                .addGap(256, 256, 256)
                                .addComponent(btnDocModify, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(btnDocDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(doctorJPanelLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                                        .addGap(175, 175, 175)
                                        .addComponent(lblPatientID1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtSearchDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDoctorSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(doctorJPanelLayout.createSequentialGroup()
                                                .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(doctorJPanelLayout.createSequentialGroup()
                                                .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                                                        .addComponent(lblLastVisit2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtDoctorType, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                                                        .addComponent(lblLastVisit1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtDoctorQualification, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtDoctorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtDoctorGender, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(6, 6, 6)
                                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblAge1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblHeight1, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblWeight1, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(5, 5, 5)
                                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDoctorWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDoctorHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDoctorBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDoctorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(doctorJPanelLayout.createSequentialGroup()
                                            .addGap(309, 309, 309)
                                            .addComponent(lblLastVisit3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtDoctorDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorJPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtDoctorPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDoctorAddress)))))
                        .addGap(0, 63, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorJPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddNewDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        doctorJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDocDelete, btnDocModify});

        doctorJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel11, jLabel12, jLabel13, jLabel15, jLabel7, lblAge1, lblHeight1, lblLastVisit1, lblName1, lblWeight1});

        doctorJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtDoctorEmail, txtDoctorGender, txtDoctorPhone, txtDoctorQualification});

        doctorJPanelLayout.setVerticalGroup(
            doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorJPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(btnAddNewDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientID1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDoctorSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDoctorGender, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDoctorQualification, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblLastVisit1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDoctorType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblLastVisit2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblLastVisit3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDoctorDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDoctorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDoctorPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDoctorAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDocModify)
                    .addComponent(btnDocDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        doctorJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDocDelete, btnDocModify});

        doctorJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel11, jLabel12, jLabel13, jLabel15, jLabel7, lblAge1, lblHeight1, lblLastVisit1, lblName1, lblWeight1});

        doctorJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDoctorSearch, lblPatientID1, txtSearchDoctorID});

        sysadminJLayeredPane.add(doctorJPanel, "card8");

        hospitalJPanel.setBackground(new java.awt.Color(255, 255, 255));

        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Founded on", "Email", "Contact", "Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hospitalTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hospitalTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(hospitalTable);

        lblCreateName2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateName2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateName2.setText("Name:");

        lblCreateDOB2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateDOB2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateDOB2.setText("Founded On:");

        lblCreateEmail2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateEmail2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateEmail2.setText("Email:");

        lblCreateCity2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateCity2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateCity2.setText("City:");

        lblCreateAddress2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateAddress2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateAddress2.setText("Address:");

        lblCreateZipcode2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateZipcode2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateZipcode2.setText("ZipCode:");

        lblCreatePhone2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreatePhone2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreatePhone2.setText("Phone:");

        lblCreateCommunity2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateCommunity2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateCommunity2.setText("Community:");

        btnHospitalUpdate.setBackground(new java.awt.Color(92, 184, 92));
        btnHospitalUpdate.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        btnHospitalUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnHospitalUpdate.setText("Update");
        btnHospitalUpdate.setBorder(null);
        btnHospitalUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalUpdateActionPerformed(evt);
            }
        });

        btnHospitalDelete.setBackground(new java.awt.Color(209, 26, 42));
        btnHospitalDelete.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        btnHospitalDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnHospitalDelete.setText("Delete");
        btnHospitalDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalDeleteActionPerformed(evt);
            }
        });

        btnHospitalSearch.setBackground(new java.awt.Color(33, 150, 243));
        btnHospitalSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHospitalSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnHospitalSearch.setText("Search");
        btnHospitalSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalSearchActionPerformed(evt);
            }
        });

        lblPatientID2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPatientID2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientID2.setText("Hospital ID:");

        btnHospitalAddNew.setBackground(new java.awt.Color(33, 150, 243));
        btnHospitalAddNew.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHospitalAddNew.setForeground(new java.awt.Color(255, 255, 255));
        btnHospitalAddNew.setText("Add New Hospital");
        btnHospitalAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalAddNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hospitalJPanelLayout = new javax.swing.GroupLayout(hospitalJPanel);
        hospitalJPanel.setLayout(hospitalJPanelLayout);
        hospitalJPanelLayout.setHorizontalGroup(
            hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospitalJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHospitalDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
            .addGroup(hospitalJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hospitalJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnHospitalAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPatientID2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txtHospitalSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHospitalSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
            .addGroup(hospitalJPanelLayout.createSequentialGroup()
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hospitalJPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(hospitalJPanelLayout.createSequentialGroup()
                                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCreateCity2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCreateAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCreateEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHospitalAddress)
                                    .addComponent(txtHospitalCity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(hospitalJPanelLayout.createSequentialGroup()
                                .addComponent(lblCreateName2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnHospitalUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(hospitalJPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCreateCommunity2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCreateDOB2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHospitalCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHospitalEstablishedIn, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospitalJPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCreatePhone2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(219, 219, 219))))
                    .addGroup(hospitalJPanelLayout.createSequentialGroup()
                        .addGap(459, 459, 459)
                        .addComponent(lblCreateZipcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHospitalPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHospitalZip, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        hospitalJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHospitalDelete, btnHospitalUpdate});

        hospitalJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtHospitalAddress, txtHospitalCity, txtHospitalCommunity, txtHospitalEmail, txtHospitalEstablishedIn, txtHospitalName, txtHospitalZip});

        hospitalJPanelLayout.setVerticalGroup(
            hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospitalJPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientID2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHospitalAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHospitalSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateName2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalEstablishedIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateDOB2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(hospitalJPanelLayout.createSequentialGroup()
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHospitalCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateCommunity2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCreateZipcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHospitalZip, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHospitalUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHospitalDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(hospitalJPanelLayout.createSequentialGroup()
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCreateAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHospitalAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCreateCity2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHospitalCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCreateEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreatePhone2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHospitalPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(103, 103, 103))))
        );

        hospitalJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnHospitalDelete, btnHospitalUpdate});

        hospitalJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtHospitalAddress, txtHospitalCity, txtHospitalCommunity, txtHospitalEmail, txtHospitalEstablishedIn, txtHospitalName, txtHospitalPhone, txtHospitalZip});

        sysadminJLayeredPane.add(hospitalJPanel, "card10");

        hospitalCreateJPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblCreateCommunity3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateCommunity3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateCommunity3.setText("Community:");

        lblCreatePhone3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreatePhone3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreatePhone3.setText("Phone:");

        lblCreateName4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateName4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateName4.setText("Name:");

        lblCreateEmail3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateEmail3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateEmail3.setText("Email:");

        lblCreateDOB3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateDOB3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateDOB3.setText("Founded On:");

        lblCreateZipcode3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateZipcode3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateZipcode3.setText("ZipCode:");

        lblCreateAddress3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateAddress3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateAddress3.setText("Address:");

        lblCreateCity3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCreateCity3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateCity3.setText("City:");

        btnCreateHospitalSubmit.setBackground(new java.awt.Color(92, 184, 92));
        btnCreateHospitalSubmit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnCreateHospitalSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateHospitalSubmit.setText("SUBMIT");
        btnCreateHospitalSubmit.setBorder(null);
        btnCreateHospitalSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreateHospitalSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateHospitalSubmitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Algerian", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hospital Details");

        javax.swing.GroupLayout hospitalCreateJPanelLayout = new javax.swing.GroupLayout(hospitalCreateJPanel);
        hospitalCreateJPanel.setLayout(hospitalCreateJPanelLayout);
        hospitalCreateJPanelLayout.setHorizontalGroup(
            hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospitalCreateJPanelLayout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblCreateName4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(hospitalCreateJPanelLayout.createSequentialGroup()
                            .addComponent(lblCreateDOB3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(33, 33, 33)
                            .addComponent(txtCreateHospitalEstablishedIn, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(hospitalCreateJPanelLayout.createSequentialGroup()
                        .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCreatePhone3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateEmail3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCreateHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCreateHospitalPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(hospitalCreateJPanelLayout.createSequentialGroup()
                        .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCreateZipcode3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateCity3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateCommunity3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCreateAddress3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCreateHospitalAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCreateHospitalCommunity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCreateHospitalCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCreateHospitalZip, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(hospitalCreateJPanelLayout.createSequentialGroup()
                        .addComponent(btnCreateHospitalSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139))
                    .addComponent(txtCreateHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(206, 206, 206))
        );

        hospitalCreateJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCreateHospitalAddress, txtCreateHospitalCity, txtCreateHospitalCommunity, txtCreateHospitalEmail, txtCreateHospitalEstablishedIn, txtCreateHospitalName, txtCreateHospitalPhone, txtCreateHospitalZip});

        hospitalCreateJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblCreateAddress3, lblCreateCity3, lblCreateCommunity3, lblCreateDOB3, lblCreateEmail3, lblCreateName4, lblCreatePhone3, lblCreateZipcode3});

        hospitalCreateJPanelLayout.setVerticalGroup(
            hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospitalCreateJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreateName4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreateHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateHospitalEstablishedIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateDOB3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateHospitalAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateAddress3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateHospitalCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateCommunity3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateHospitalCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateCity3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateHospitalZip, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateZipcode3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateHospitalPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreatePhone3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hospitalCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateEmail3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCreateHospitalSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        hospitalCreateJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCreateHospitalAddress, txtCreateHospitalCity, txtCreateHospitalCommunity, txtCreateHospitalEmail, txtCreateHospitalEstablishedIn, txtCreateHospitalName, txtCreateHospitalPhone, txtCreateHospitalZip});

        hospitalCreateJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblCreateAddress3, lblCreateCity3, lblCreateCommunity3, lblCreateDOB3, lblCreateEmail3, lblCreateName4, lblCreatePhone3, lblCreateZipcode3});

        sysadminJLayeredPane.add(hospitalCreateJPanel, "card11");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sysadminJLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btnPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btnDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btnHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDoctor, btnHospital, btnLogOut, btnPatient, btnPerson});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPatient)
                    .addComponent(btnLogOut)
                    .addComponent(btnPerson)
                    .addComponent(btnDoctor)
                    .addComponent(btnHospital))
                .addGap(10, 10, 10)
                .addComponent(sysadminJLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDoctor, btnHospital, btnLogOut, btnPatient, btnPerson});

    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
//        emptyTable(communityTable);
        emptyTable(patientTable);
        LoginJPanel hjp = new LoginJPanel(layeredPane, system);
        displayPanel(layeredPane, hjp);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientActionPerformed
//        emptyTable(communityTable);
        emptyTable(patientTable);
        resetPatientView();
        displayPanel(sysadminJLayeredPane, patientJPanel);
    }//GEN-LAST:event_btnPatientActionPerformed

    private void personTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personTableMouseClicked
        
    }//GEN-LAST:event_personTableMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        int id = -1;
        try {
            id = Integer.parseInt(txtSearchPatientID.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct ID!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        currentPatient = system.getPatientDirectory().getPatient(id);
        if (currentPatient == null) {
            JOptionPane.showMessageDialog(this, "Patient ID doesn't exist!!", "Error", JOptionPane.ERROR_MESSAGE);
            resetPatientView();
            return;
        }

        txtPatientName.setText(currentPatient.getName());
        txtPatientAge.setText(String.valueOf(Utils.ageCalculator(currentPatient.getDateOfBirth())));
        txtPatientBloodGroup.setText(currentPatient.getBloodGroup());
        txtPatientGender.setText(currentPatient.getGender());
        txtPatientHeight.setText(String.valueOf(currentPatient.getHeight()));
        txtPatientWeight.setText(String.valueOf(currentPatient.getWeight()));
        txtPhone.setText(String.valueOf(currentPatient.getPhoneNumber()));
        txtEmail.setText(currentPatient.getEmail());
        String addressData = String.valueOf(currentPatient.getHouse().getHouseNumber()) + ", "
        + currentPatient.getHouse().getCommunity() + ", "
        + currentPatient.getHouse().getCity() + " - "
        + String.format("%05d", currentPatient.getHouse().getZip());
        txtAddress.setText(addressData);

        int size = currentPatient.getEncounterHistory().getEncounters().size();

        if (size == 0) {
            txtLastVisit.setText("Never");
        } else {
            txtLastVisit.setText(sDF.format(currentPatient.getEncounterHistory().getEncounters().get(size - 1).getVisitDate()));
        }

        List<Object[]> data = new ArrayList<>();
        for (int i = size - 1; i >= 0; i--) {
            Object[] temp = new Object[6];
            temp[0] = sDF.format(currentPatient.getEncounterHistory().getEncounters().get(i).getVisitDate());
            temp[1] = currentPatient.getEncounterHistory().getEncounters().get(i).getHeartRate();
            temp[2] = currentPatient.getEncounterHistory().getEncounters().get(i).getOxygenLevel();
            temp[3] = currentPatient.getEncounterHistory().getEncounters().get(i).getTemperature();
            temp[4] = currentPatient.getEncounterHistory().getEncounters().get(i).gethBloodPressure();
            //            System.out.println(temp[4]);
            temp[5] = currentPatient.getEncounterHistory().getEncounters().get(i).getlBloodPressure();
            //            System.out.println(temp[5]);
            data.add(temp);
        }

        patientTable.remove(noEncounterTableStatus);
        patientTable.setFillsViewportHeight(false);
        populateTable(patientTable, data);
        if (((DefaultTableModel) patientTable.getModel()).getRowCount() == 0) {
            patientTable.add(noEncounterTableStatus);
            patientTable.setFillsViewportHeight(true);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
//        emptyTable(communityTable);
        emptyTable(patientTable);
        if (currentPatient == null) {
            JOptionPane.showMessageDialog(this, "No patient id provided!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        displayPanel(sysadminJLayeredPane, patientModifyJPanel);
        resetPatientView();
        currentModifyPatientID = currentPatient.getPatientID();
        txtPatientIDModify.setText(String.valueOf(currentModifyPatientID));
        txtPatientNameModify.setText(currentPatient.getName());
        txtPatientGenderModify.setText(currentPatient.getGender());
        txtEmailModify.setText(currentPatient.getEmail());
        txtAddressModify.setText(String.valueOf(currentPatient.getHouse().getHouseNumber()));
        txtZipCodeModify.setText(String.valueOf(currentPatient.getHouse().getZip()));
        txtPhoneModify.setText(String.valueOf(currentPatient.getPhoneNumber()));
        txtCommunityModify.setText(currentPatient.getHouse().getCommunity());
        txtPatientHeightModify.setText(String.valueOf(currentPatient.getHeight()));
        txtPatientWeightModify.setText(String.valueOf(currentPatient.getWeight()));
        txtCityModify.setText(currentPatient.getHouse().getCity());
        txtPersonIdModify.setText(String.valueOf(currentPatient.getPersonId()));
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (currentPatient == null) {
            JOptionPane.showMessageDialog(this, "Please select patient details to delete!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int result = JOptionPane.showConfirmDialog(this, "Do you want to delete patient with ID:" + currentPatient.getPatientID(), "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            system.getPatientDirectory().removePatient(currentPatient.getPatientID());
            resetPatientView();
            JOptionPane.showMessageDialog(this, "Patient deleted successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
            currentPatient = null;
            currentModifyPatientID = 0;
            populateHospitalCatalog();
            
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnModifySubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifySubmitActionPerformed
        int hNo = -1;

        try {
            hNo = Integer.parseInt(txtAddressModify.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide House Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getPatientDirectory().getPatient(currentModifyPatientID).getHouse().setHouseNumber(hNo);

        float height = -1;
        float weight = -1;

        try {
            height = Float.parseFloat(txtPatientHeightModify.getText());
            weight = Float.parseFloat(txtPatientWeightModify.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide weight and height in numerics!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getPatientDirectory().getPatient(currentModifyPatientID).setHeight(height);
        system.getPatientDirectory().getPatient(currentModifyPatientID).setWeight(weight);

        int zipCode = -1;

        try {
            zipCode = Integer.parseInt(txtZipCodeModify.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide zip code as numbers!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getPatientDirectory().getPatient(currentModifyPatientID).getHouse().setZip(zipCode);

        String regex = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(txtEmailModify.getText());

        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this, "Please provide city!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getPatientDirectory().getPatient(currentModifyPatientID).setEmail(txtEmailModify.getText());

        long phno = -1;

        try {
            phno = Long.parseLong(txtPhoneModify.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct phone Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getPatientDirectory().getPatient(currentModifyPatientID).setPhoneNumber(phno);

        if (txtCommunityModify.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please provide community!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        House house = system.getPatientDirectory().getPatient(currentModifyPatientID).getHouse();
        String oldCommunity = house.getCommunity();
        String oldCity = house.getCity();
        if (!oldCity.equalsIgnoreCase(txtCityModify.getText())
            || !oldCommunity.equalsIgnoreCase(txtCommunityModify.getText())) {
            system.getCity(oldCity).getCommunity(oldCommunity).removeHouse(house);
            system.getCity(txtCityModify.getText()).getCommunity(txtCommunityModify.getText()).addCommunityHouse(house);
            system.getPatientDirectory().getPatient(currentModifyPatientID).getHouse().setCommunity(txtCommunityModify.getText());
            system.getPatientDirectory().getPatient(currentModifyPatientID).getHouse().setCity(txtCityModify.getText());
        }

        Person person = Utils.patientToPerson(system.getPatientDirectory().getPatient(currentModifyPatientID));

        system.getPersonDirectory().replacePerson(person);

        JOptionPane.showMessageDialog(this, "Patient Details Updated successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
        displayPanel(sysadminJLayeredPane, patientJPanel);
        currentPatient = null;
        txtSearchPatientID.setText(String.valueOf(currentModifyPatientID));
        btnSearch.doClick();

        currentModifyPatientID = 0;
    }//GEN-LAST:event_btnModifySubmitActionPerformed

    private void btnCreatesubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatesubmitButtonActionPerformed
        int hNo = -1;
        float height = -1;
        float weight = -1;
        Date dob = null;
        this.newPerson = new Person();
        
        if(txtCreatepatientName.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide name!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        newPerson.setName(txtCreatepatientName.getText());
        
        if(txtCreatepatientBloodGroup.getSelectedItem().equals("Select")){
            JOptionPane.showMessageDialog(this, "Please select blood group!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        newPerson.setBloodGroup((String) txtCreatepatientBloodGroup.getSelectedItem());
        
        try{
            SimpleDateFormat sDF = new SimpleDateFormat("MM/dd/yyyy");
            sDF.setLenient(false);
            dob = sDF.parse(txtCreatepatientDOB.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide date in MM/dd/yyyy format!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(Utils.isDateAfterToday(dob)){
            JOptionPane.showMessageDialog(this, "Please provide correct date of birth!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;            
        }
        
        newPerson.setDateOfBirth(dob);
        
        try{
            height = Float.parseFloat(txtCreatepatientHeight.getText());
            weight = Float.parseFloat(txtCreatepatientWeight.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide weight and height in numeric!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        newPerson.setHeight(height);
        newPerson.setWeight(weight);
        
        if(CreategenderRadioButtonGroup.getSelection()==null){
            JOptionPane.showMessageDialog(this, "Please select the gender!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;            
        }
        
        
        String gender;
        if(CreatemaleRadioButton.isSelected()){
            gender = "Male";            
        }else if (CreatefemaleRadioButton.isSelected()){
            gender = "Female";
        }else{
            gender = "Other";
        }
        newPerson.setGender(gender);

        
        try{
            hNo = Integer.parseInt(txtCreateaddress.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide House Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.getHouse().setHouseNumber(hNo);

        if(txtCreatecommunity.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide Community!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.getHouse().setCommunity(txtCreatecommunity.getText());

        if(txtCreatecity.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide City!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.getHouse().setCity(txtCreatecity.getText());

        int zipCode = -1;

        try{
            zipCode = Integer.parseInt(txtCreatezip.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide zip code as numbers!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.getHouse().setZip(zipCode);

        String regex = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(txtCreateemail.getText());

        if(!matcher.matches()){
            JOptionPane.showMessageDialog(this, "Please provide City!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.setEmail(txtCreateemail.getText());

        long phno = -1;

        try{
            phno = Long.parseLong(txtCreatephone.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide correct phone Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.setPhoneNumber(phno);

        int id = system.addPerson(newPerson);
        JOptionPane.showMessageDialog(this, "Person added successfully!!\nPerson ID: "+id, "Info", JOptionPane.INFORMATION_MESSAGE);
        Utils.copyToClipboard(id);
        emptyForm();
        displayPanel(sysadminJLayeredPane, personJPanel);
        populatePersonCatalog();
    }//GEN-LAST:event_btnCreatesubmitButtonActionPerformed

    private void btnAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPersonActionPerformed
        displayPanel(sysadminJLayeredPane, personAddJPanel);
    }//GEN-LAST:event_btnAddPersonActionPerformed

    private void btnAddAsPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAsPatientActionPerformed
        int pID = -1;
        try{
            pID=Integer.parseInt(patientID.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide a number!", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        Patient patient = new Patient();
        if(pID>5000 && pID<5999){
            if(system.getPatientDirectory().getPatientIDs()!=null && !system.getPatientDirectory().getPatientIDs().contains(pID)){
                JOptionPane.showMessageDialog(this, "Patient ID doesn't exist!", "Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            patient = system.getPatientDirectory().getPatient(pID);
        }
        else if(pID>1000 && pID<1999){
            if(system.getPatientDirectory().getPersonIDs().contains(pID)){
                int patientId = system.getPatientDirectory().getPatientId(pID);
                patient = system.getPatientDirectory().getPatient(patientId);
                //JOptionPane.showMessageDialog(this, "Next time!! Please use patient ID:"+patientId+ ".", "Info",JOptionPane.INFORMATION_MESSAGE);
            }
            else if(!system.getPersonDirectory().getPersonIds().contains(pID)){
                JOptionPane.showMessageDialog(this, "Person ID doesn't exist!", "Error",JOptionPane.ERROR_MESSAGE);
                return;
            }else{
                Person person = system.getPersonDirectory().getPerson(pID);
                patient = Utils.personToPatient(person);
                int id = system.addPatient(patient);
                JOptionPane.showMessageDialog(this, "Patient successfully created!!\nPatient ID: "+id, "Info", JOptionPane.INFORMATION_MESSAGE);
                Utils.copyToClipboard(id);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Wrong Person/Patient ID!!", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        EncounterJPanel ejp = new EncounterJPanel(layeredPane, patient, system, 0);
        displayPanel(layeredPane,ejp);

    }//GEN-LAST:event_btnAddAsPatientActionPerformed

    private void btnCreateDocsubmitButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateDocsubmitButton1ActionPerformed
        int hNo = -1;
        float height = -1;
        float weight = -1;
        Date dob = null;
        this.newPerson = new Person();
        
        if(txtCreateDoctorName.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide name!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        newPerson.setName(txtCreateDoctorName.getText());
        
        if(cbCreateDoctorBloodGroup1.getSelectedItem().equals("Select")){
            JOptionPane.showMessageDialog(this, "Please select blood group!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        newPerson.setBloodGroup((String) cbCreateDoctorBloodGroup1.getSelectedItem());
        
        try{
            SimpleDateFormat sDF = new SimpleDateFormat("MM/dd/yyyy");
            sDF.setLenient(false);
            dob = sDF.parse(txtCreateDoctorDOB.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide date in MM/dd/yyyy format!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(Utils.isDateAfterToday(dob)){
            JOptionPane.showMessageDialog(this, "Please provide correct date of birth!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;            
        }
        
        newPerson.setDateOfBirth(dob);
        
        try{
            height = Float.parseFloat(txtCreateDoctorHeight.getText());
            weight = Float.parseFloat(txtCreateDoctorWeight.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide weight and height in numeric!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        newPerson.setHeight(height);
        newPerson.setWeight(weight);
        
        if(CreategenderRadioButtonGroup.getSelection()==null){
            JOptionPane.showMessageDialog(this, "Please select the gender!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;            
        }
        
        
        String gender;
        if(rbCreateDoctorMale.isSelected()){
            gender = "Male";            
        }else if (rbCreateDoctorFemale.isSelected()){
            gender = "Female";
        }else{
            gender = "Other";
        }
        newPerson.setGender(gender);

        
        try{
            hNo = Integer.parseInt(txtCreateDoctorAddress.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide House Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.getHouse().setHouseNumber(hNo);

        if(txtCreateDoctorCommunity.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide Community!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.getHouse().setCommunity(txtCreateDoctorCommunity.getText());

        if(txtCreateDoctorCity.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide City!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.getHouse().setCity(txtCreateDoctorCity.getText());

        int zipCode = -1;

        try{
            zipCode = Integer.parseInt(txtCreateDoctorZip.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide zip code as numbers!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.getHouse().setZip(zipCode);

        String regex = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(txtCreateDoctorEmail.getText());

        if(!matcher.matches()){
            JOptionPane.showMessageDialog(this, "Please provide City!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.setEmail(txtCreateDoctorEmail.getText());

        long phno = -1;

        try{
            phno = Long.parseLong(txtCreateDoctorPhone.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide correct phone Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newPerson.setPhoneNumber(phno);
		
		if(txtCreateDoctorDesignation.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide designation!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        newPerson.setDesignation(txtCreateDoctorDesignation.getText());
		
		if(txtCreateDoctorType.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide type of doctor!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        newPerson.setType(txtCreateDoctorType.getText());
		
		if(txtCreateDoctorQuali.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide name!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        newPerson.setQualification(txtCreateDoctorQuali.getText());
		
        int id = system.addPerson(newPerson);
        Doctor doctor = new Doctor();
        Person person = system.getPersonDirectory().getPerson(id);
        doctor = Utils.personToDoctor(person);
        system.addDoctor(doctor);
        JOptionPane.showMessageDialog(this, "Doctor successfully created!!\nDoctor ID: "+id, "Info", JOptionPane.INFORMATION_MESSAGE);
        Utils.copyToClipboard(id);
                
        emptyForm();
        displayPanel(sysadminJLayeredPane, personJPanel);
        populatePersonCatalog();
    }//GEN-LAST:event_btnCreateDocsubmitButton1ActionPerformed

    private void btnDocDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocDeleteActionPerformed
        if (currentDoctor == null) {
            JOptionPane.showMessageDialog(this, "Please doctor details to delete!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int result = JOptionPane.showConfirmDialog(this, "Do you want to delete doctor with ID:" + currentDoctor.getDoctorID(), "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            system.getDoctorDirectory().removeDoctor(currentDoctor.getDoctorID());
            resetDoctorView();
            JOptionPane.showMessageDialog(this, "Doctor deleted successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
            currentDoctor = null;
            currentModifyDoctorID = 0;
        }
    }//GEN-LAST:event_btnDocDeleteActionPerformed

    private void btnDoctorSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoctorSearchActionPerformed
        int id = -1;
        try {
            id = Integer.parseInt(txtSearchDoctorID.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct ID!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        currentDoctor = system.getDoctorDirectory().getDoctor(id);
        if (currentDoctor == null) {
            JOptionPane.showMessageDialog(this, "Doctor ID doesn't exist!!", "Error", JOptionPane.ERROR_MESSAGE);
            resetDoctorView();
            return;
        }

        txtDoctorName.setText(currentDoctor.getName());
        txtDoctorAge.setText(String.valueOf(Utils.ageCalculator(currentDoctor.getDateOfBirth())));
        txtDoctorBloodGroup.setText(currentDoctor.getBloodGroup());
        txtDoctorGender.setText(currentDoctor.getGender());
        txtDoctorHeight.setText(String.valueOf(currentDoctor.getHeight()));
        txtDoctorWeight.setText(String.valueOf(currentDoctor.getWeight()));
        txtDoctorPhone.setText(String.valueOf(currentDoctor.getPhoneNumber()));
        txtDoctorEmail.setText(currentDoctor.getEmail());
        txtDoctorQualification.setText(currentDoctor.getQualification());
        txtDoctorType.setText(currentDoctor.getType());
        txtDoctorDesignation.setText(currentDoctor.getDesignation());
        String addressData = String.valueOf(currentDoctor.getHouse().getHouseNumber()) + ", "
        + currentDoctor.getHouse().getCommunity() + ", "
        + currentDoctor.getHouse().getCity() + " - "
        + String.format("%05d", currentDoctor.getHouse().getZip());
        txtDoctorAddress.setText(addressData);
    }//GEN-LAST:event_btnDoctorSearchActionPerformed

    private void btnDocModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocModifyActionPerformed

        if (currentDoctor == null) {
            JOptionPane.showMessageDialog(this, "No doctor id provided!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        displayPanel(sysadminJLayeredPane, doctorModifyJPanel);
        resetDoctorView();
        currentModifyDoctorID = currentDoctor.getDoctorID();
        txtModDocDoctorID.setText(String.valueOf(currentModifyDoctorID));
        txtModDocName.setText(currentDoctor.getName());
        txtModDocGender.setText(currentDoctor.getGender());
        txtModDocEmail.setText(currentDoctor.getEmail());
        txtModDocQuali.setText(currentDoctor.getQualification());
        txtModDocType.setText(currentDoctor.getType());
        txtModDocDesignation.setText(currentDoctor.getDesignation());
        txtModDocAddress.setText(String.valueOf(currentDoctor.getHouse().getHouseNumber()));
        txtModDocZip.setText(String.valueOf(currentDoctor.getHouse().getZip()));
        txtModDocPhone.setText(String.valueOf(currentDoctor.getPhoneNumber()));
        txtModDocCommunity.setText(currentDoctor.getHouse().getCommunity());
        txtModDocHeight.setText(String.valueOf(currentDoctor.getHeight()));
        txtModDocWeight.setText(String.valueOf(currentDoctor.getWeight()));
        txtModDocCity.setText(currentDoctor.getHouse().getCity());
        txtModDocPersonID.setText(String.valueOf(currentDoctor.getPersonId()));
    }//GEN-LAST:event_btnDocModifyActionPerformed

    private void btnAddNewDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewDoctorActionPerformed
        displayPanel(sysadminJLayeredPane, doctorCreateJpanel);
    }//GEN-LAST:event_btnAddNewDoctorActionPerformed

    private void btnModDocSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModDocSubmitActionPerformed
        int hNo = -1;

        try {
            hNo = Integer.parseInt(txtModDocAddress.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide House Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getDoctorDirectory().getDoctor(currentModifyDoctorID).getHouse().setHouseNumber(hNo);

        float height = -1;
        float weight = -1;

        try {
            height = Float.parseFloat(txtModDocHeight.getText());
            weight = Float.parseFloat(txtModDocWeight.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide weight and height in numerics!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getDoctorDirectory().getDoctor(currentModifyDoctorID).setHeight(height);
        system.getDoctorDirectory().getDoctor(currentModifyDoctorID).setWeight(weight);

        int zipCode = -1;

        try {
            zipCode = Integer.parseInt(txtModDocZip.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide zip code as numbers!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getDoctorDirectory().getDoctor(currentModifyDoctorID).getHouse().setZip(zipCode);

        String regex = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(txtModDocEmail.getText());

        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this, "Please provide city!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getDoctorDirectory().getDoctor(currentModifyDoctorID).setEmail(txtModDocEmail.getText());

        long phno = -1;

        try {
            phno = Long.parseLong(txtModDocPhone.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct phone Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getDoctorDirectory().getDoctor(currentModifyDoctorID).setPhoneNumber(phno);
        
        

        if (txtModDocCommunity.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please provide community!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        House house = system.getDoctorDirectory().getDoctor(currentModifyDoctorID).getHouse();
        String oldCommunity = house.getCommunity();
        String oldCity = house.getCity();
        if (!oldCity.equalsIgnoreCase(txtModDocCity.getText())
            || !oldCommunity.equalsIgnoreCase(txtModDocCommunity.getText())) {
            system.getCity(oldCity).getCommunity(oldCommunity).removeHouse(house);
            system.getCity(txtModDocCity.getText()).getCommunity(txtModDocCommunity.getText()).addCommunityHouse(house);
            system.getDoctorDirectory().getDoctor(currentModifyDoctorID).getHouse().setCommunity(txtModDocCommunity.getText());
            system.getDoctorDirectory().getDoctor(currentModifyDoctorID).getHouse().setCity(txtModDocCity.getText());
        }
        
        if(txtModDocDesignation.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide designation!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        system.getDoctorDirectory().getDoctor(currentModifyDoctorID).setDesignation(txtModDocDesignation.getText());
        
        
        if(txtModDocType.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide doctor type!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        system.getDoctorDirectory().getDoctor(currentModifyDoctorID).setType(txtModDocType.getText());
        
        if(txtModDocQuali.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide qualification!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        system.getDoctorDirectory().getDoctor(currentModifyDoctorID).setQualification(txtModDocQuali.getText());
        
        
        

        Person person = Utils.doctorToPerson(system.getDoctorDirectory().getDoctor(currentModifyDoctorID));

        system.getPersonDirectory().replacePerson(person);

        JOptionPane.showMessageDialog(this, "Doctor Details Updated successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
        displayPanel(sysadminJLayeredPane, doctorJPanel);
        currentDoctor = null;
        txtSearchDoctorID.setText(String.valueOf(currentModifyDoctorID));
        btnDoctorSearch.doClick();

        currentModifyDoctorID = 0;
    }//GEN-LAST:event_btnModDocSubmitActionPerformed

    private void hospitalTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hospitalTableMouseClicked

        
    }//GEN-LAST:event_hospitalTableMouseClicked

    private void btnHospitalUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalUpdateActionPerformed
        // TODO add your handling code here:
        
        if (currentHospital == null) {
            JOptionPane.showMessageDialog(this, "No Hospital selected to update!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        currentModifyHospitalID = currentHospital.getHospitalId();
        
        
        int hNo = -1;

        try {
            hNo = Integer.parseInt(txtHospitalAddress.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide House Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getHospitalDirectory().getHospital(currentModifyHospitalID).getHouse().setHouseNumber(hNo);

        int zipCode = -1;

        try {
            zipCode = Integer.parseInt(txtHospitalZip.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide zip code as numbers!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getHospitalDirectory().getHospital(currentModifyHospitalID).getHouse().setZip(zipCode);

        String regex = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(txtHospitalEmail.getText());

        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this, "Please provide city!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getHospitalDirectory().getHospital(currentModifyHospitalID).setEmail(txtHospitalEmail.getText());

        long phno = -1;

        try {
            phno = Long.parseLong(txtHospitalPhone.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct phone Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getHospitalDirectory().getHospital(currentModifyHospitalID).setContact(phno);
        
        int ei;
        try{
            ei = Integer.parseInt(txtHospitalEstablishedIn.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide correct Established on year!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(ei> 2022){
            JOptionPane.showMessageDialog(this, "Please provide correct established on year!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;            
        }
        
        system.getHospitalDirectory().getHospital(currentModifyHospitalID).setEstablishedIn(ei);
        
        if(txtHospitalName.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide name!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        system.getHospitalDirectory().getHospital(currentModifyHospitalID).setName(txtHospitalName.getText());

        if (txtHospitalCommunity.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please provide community!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        House house = system.getHospitalDirectory().getHospital(currentModifyHospitalID).getHouse();
        String oldCommunity = house.getCommunity();
        String oldCity = house.getCity();
        if (!oldCity.equalsIgnoreCase(txtHospitalCity.getText())
            || !oldCommunity.equalsIgnoreCase(txtHospitalCommunity.getText())) {
            system.getCity(oldCity).getCommunity(oldCommunity).removeHouse(house);
            system.getCity(txtHospitalCity.getText()).getCommunity(txtHospitalCommunity.getText()).addCommunityHouse(house);
            system.getHospitalDirectory().getHospital(currentModifyHospitalID).getHouse().setCommunity(txtHospitalCommunity.getText());
            system.getHospitalDirectory().getHospital(currentModifyHospitalID).getHouse().setCity(txtHospitalCity.getText());
        }



        JOptionPane.showMessageDialog(this, "Hospital Details Updated successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
        
        currentHospital = null;
        currentModifyHospitalID = 0;
        resetHospitalView();
        populateHospitalCatalog();
        
    }//GEN-LAST:event_btnHospitalUpdateActionPerformed

    private void btnHospitalDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalDeleteActionPerformed
        if (currentHospital == null) {
            JOptionPane.showMessageDialog(this, "Please select hospital details to delete!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int result = JOptionPane.showConfirmDialog(this, "Do you want to delete hospital with ID:" + currentHospital.getHospitalId(), "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            system.getHospitalDirectory().removeHospital(currentHospital.getHospitalId());
            resetHospitalView();
            JOptionPane.showMessageDialog(this, "Hospital deleted successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
            currentHospital = null;
            currentModifyHospitalID = 0;
            resetHospitalView();
            populateHospitalCatalog();
            
        } 
    }//GEN-LAST:event_btnHospitalDeleteActionPerformed

    private void btnHospitalSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalSearchActionPerformed
        int id = -1;
        try {
            id = Integer.parseInt(txtHospitalSearch.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct ID!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        currentHospital = system.getHospitalDirectory().getHospital(id);
        if (currentHospital == null) {
            JOptionPane.showMessageDialog(this, "Hospital ID doesn't exist!!", "Error", JOptionPane.ERROR_MESSAGE);
            resetHospitalView();
            return;
        }
        
        txtHospitalName.setText(currentHospital.getName());
        txtHospitalEmail.setText(currentHospital.getEmail());
        txtHospitalEstablishedIn.setText(String.valueOf(currentHospital.getEstablishedIn()));
        txtHospitalAddress.setText(String.valueOf(currentHospital.getHouse().getHouseNumber()));
        txtHospitalZip.setText(String.valueOf(currentHospital.getHouse().getZip()));
        txtHospitalPhone.setText(String.valueOf(currentHospital.getContact()));
        txtHospitalCommunity.setText(currentHospital.getHouse().getCommunity());
        txtHospitalCity.setText(currentHospital.getHouse().getCity());
    }//GEN-LAST:event_btnHospitalSearchActionPerformed

    private void btnHospitalAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalAddNewActionPerformed
        displayPanel(sysadminJLayeredPane, hospitalCreateJPanel);
    }//GEN-LAST:event_btnHospitalAddNewActionPerformed

    private void btnCreateHospitalSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateHospitalSubmitActionPerformed
        this.newHospital = new Hospital();
        
               
        int hNo = -1;

        try {
            hNo = Integer.parseInt(txtCreateHospitalAddress.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide House Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newHospital.getHouse().setHouseNumber(hNo);

        int zipCode = -1;

        try {
            zipCode = Integer.parseInt(txtCreateHospitalZip.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide zip code as numbers!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newHospital.getHouse().setZip(zipCode);

        String regex = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(txtCreateHospitalEmail.getText());

        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this, "Please provide email!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newHospital.setEmail(txtCreateHospitalEmail.getText());

        long phno = -1;

        try {
            phno = Long.parseLong(txtCreateHospitalPhone.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct phone Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newHospital.setContact(phno);
        
        int ei;
        try{
            ei = Integer.parseInt(txtCreateHospitalEstablishedIn.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide Established on year!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(ei> 2022){
            JOptionPane.showMessageDialog(this, "Please provide correct established on year!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;            
        }
        
        newHospital.setEstablishedIn(ei);
        
        if(txtCreateHospitalName.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide name!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        newHospital.setName(txtCreateHospitalName.getText());

        
        if(txtCreateHospitalCommunity.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide Community!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newHospital.getHouse().setCommunity(txtCreateHospitalCommunity.getText());

        if(txtCreateHospitalCity.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide City!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        newHospital.getHouse().setCity(txtCreateHospitalCity.getText());
        
        int id = system.addHospital(newHospital);
        JOptionPane.showMessageDialog(this, "Person added successfully!!\nHospital ID: "+id, "Info", JOptionPane.INFORMATION_MESSAGE);
        Utils.copyToClipboard(id);
        emptyForm();
        displayPanel(sysadminJLayeredPane, hospitalJPanel);
        populateHospitalCatalog();        
        
    }//GEN-LAST:event_btnCreateHospitalSubmitActionPerformed

    private void btnHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalActionPerformed
        displayPanel(sysadminJLayeredPane, hospitalJPanel);
        populateHospitalCatalog();

    }//GEN-LAST:event_btnHospitalActionPerformed

    private void btnDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoctorActionPerformed
        resetDoctorView();
        displayPanel(sysadminJLayeredPane, doctorJPanel);
    }//GEN-LAST:event_btnDoctorActionPerformed

    private void btnPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonActionPerformed
        displayPanel(sysadminJLayeredPane, personJPanel);
        populatePersonCatalog();
    }//GEN-LAST:event_btnPersonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton CreatefemaleRadioButton;
    private javax.swing.ButtonGroup CreategenderRadioButtonGroup;
    private javax.swing.JRadioButton CreatemaleRadioButton;
    private javax.swing.JRadioButton CreateothersRadioButton;
    private javax.swing.JLabel ageGroupTableStatus;
    private javax.swing.JButton btnAddAsPatient;
    private javax.swing.JButton btnAddNewDoctor;
    private javax.swing.JButton btnAddPerson;
    private javax.swing.JButton btnCreateDocsubmitButton1;
    private javax.swing.JButton btnCreateHospitalSubmit;
    private javax.swing.JButton btnCreatesubmitButton;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDocDelete;
    private javax.swing.JButton btnDocModify;
    private javax.swing.JButton btnDoctor;
    private javax.swing.JButton btnDoctorSearch;
    private javax.swing.JButton btnHospital;
    private javax.swing.JButton btnHospitalAddNew;
    private javax.swing.JButton btnHospitalDelete;
    private javax.swing.JButton btnHospitalSearch;
    private javax.swing.JButton btnHospitalUpdate;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnModDocSubmit;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnModifySubmit;
    private javax.swing.JButton btnPatient;
    private javax.swing.JButton btnPerson;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbCreateDoctorBloodGroup1;
    private javax.swing.JPanel doctorCreateJpanel;
    private javax.swing.JPanel doctorJPanel;
    private javax.swing.JPanel doctorModifyJPanel;
    private javax.swing.JPanel hospitalCreateJPanel;
    private javax.swing.JPanel hospitalJPanel;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAge1;
    private javax.swing.JLabel lblCreateAddress;
    private javax.swing.JLabel lblCreateAddress1;
    private javax.swing.JLabel lblCreateAddress2;
    private javax.swing.JLabel lblCreateAddress3;
    private javax.swing.JLabel lblCreateBloodGroup;
    private javax.swing.JLabel lblCreateBloodGroup1;
    private javax.swing.JLabel lblCreateCity;
    private javax.swing.JLabel lblCreateCity1;
    private javax.swing.JLabel lblCreateCity2;
    private javax.swing.JLabel lblCreateCity3;
    private javax.swing.JLabel lblCreateCommunity;
    private javax.swing.JLabel lblCreateCommunity1;
    private javax.swing.JLabel lblCreateCommunity2;
    private javax.swing.JLabel lblCreateCommunity3;
    private javax.swing.JLabel lblCreateDOB;
    private javax.swing.JLabel lblCreateDOB1;
    private javax.swing.JLabel lblCreateDOB2;
    private javax.swing.JLabel lblCreateDOB3;
    private javax.swing.JLabel lblCreateDocType;
    private javax.swing.JLabel lblCreateDocType1;
    private javax.swing.JLabel lblCreateEmail;
    private javax.swing.JLabel lblCreateEmail1;
    private javax.swing.JLabel lblCreateEmail2;
    private javax.swing.JLabel lblCreateEmail3;
    private javax.swing.JLabel lblCreateGender;
    private javax.swing.JLabel lblCreateGender1;
    private javax.swing.JLabel lblCreateHeight;
    private javax.swing.JLabel lblCreateHeight1;
    private javax.swing.JLabel lblCreateName;
    private javax.swing.JLabel lblCreateName1;
    private javax.swing.JLabel lblCreateName2;
    private javax.swing.JLabel lblCreateName3;
    private javax.swing.JLabel lblCreateName4;
    private javax.swing.JLabel lblCreatePhone;
    private javax.swing.JLabel lblCreatePhone1;
    private javax.swing.JLabel lblCreatePhone2;
    private javax.swing.JLabel lblCreatePhone3;
    private javax.swing.JLabel lblCreateWeight;
    private javax.swing.JLabel lblCreateWeight1;
    private javax.swing.JLabel lblCreateZipcode;
    private javax.swing.JLabel lblCreateZipcode1;
    private javax.swing.JLabel lblCreateZipcode2;
    private javax.swing.JLabel lblCreateZipcode3;
    private javax.swing.JLabel lblCreatecms;
    private javax.swing.JLabel lblCreatecms1;
    private javax.swing.JLabel lblCreatekgs;
    private javax.swing.JLabel lblCreatekgs1;
    private javax.swing.JLabel lblEncounterHistorytitle;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblHeight1;
    private javax.swing.JLabel lblLastVisit;
    private javax.swing.JLabel lblLastVisit1;
    private javax.swing.JLabel lblLastVisit2;
    private javax.swing.JLabel lblLastVisit3;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPatientID1;
    private javax.swing.JLabel lblPatientID2;
    private javax.swing.JLabel lblPersonalDetails;
    private javax.swing.JLabel lblPersonalDetails1;
    private javax.swing.JLabel lblPersonalDetails2;
    private javax.swing.JLabel lblPersonalDetails3;
    private javax.swing.JLabel lblPersontitle;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblWeight1;
    private javax.swing.JLabel noEncounterTableStatus;
    private javax.swing.JLabel noHospitalTableStatus;
    private javax.swing.JLabel noPatientTableStatus;
    private javax.swing.JLabel noPersonTableStatus;
    private javax.swing.JTextField patientID;
    private javax.swing.JPanel patientJPanel;
    private javax.swing.JPanel patientModifyJPanel;
    private javax.swing.JTable patientTable;
    private javax.swing.JPanel personAddJPanel;
    private javax.swing.JPanel personJPanel;
    private javax.swing.JTable personTable;
    private javax.swing.JRadioButton rbCreateDoctorFemale;
    private javax.swing.JRadioButton rbCreateDoctorMale;
    private javax.swing.JRadioButton rbCreateDoctorOther;
    private javax.swing.JLayeredPane sysadminJLayeredPane;
    private javax.swing.JLabel tableRecordsStatus;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAddressModify;
    private javax.swing.JTextField txtCityModify;
    private javax.swing.JTextField txtCommunityModify;
    private javax.swing.JTextField txtCreateDoctorAddress;
    private javax.swing.JTextField txtCreateDoctorCity;
    private javax.swing.JTextField txtCreateDoctorCommunity;
    private javax.swing.JTextField txtCreateDoctorDOB;
    private javax.swing.JTextField txtCreateDoctorDesignation;
    private javax.swing.JTextField txtCreateDoctorEmail;
    private javax.swing.JTextField txtCreateDoctorHeight;
    private javax.swing.JTextField txtCreateDoctorName;
    private javax.swing.JTextField txtCreateDoctorPhone;
    private javax.swing.JTextField txtCreateDoctorQuali;
    private javax.swing.JTextField txtCreateDoctorType;
    private javax.swing.JTextField txtCreateDoctorWeight;
    private javax.swing.JTextField txtCreateDoctorZip;
    private javax.swing.JTextField txtCreateHospitalAddress;
    private javax.swing.JTextField txtCreateHospitalCity;
    private javax.swing.JTextField txtCreateHospitalCommunity;
    private javax.swing.JTextField txtCreateHospitalEmail;
    private javax.swing.JTextField txtCreateHospitalEstablishedIn;
    private javax.swing.JTextField txtCreateHospitalName;
    private javax.swing.JTextField txtCreateHospitalPhone;
    private javax.swing.JTextField txtCreateHospitalZip;
    private javax.swing.JTextField txtCreateaddress;
    private javax.swing.JTextField txtCreatecity;
    private javax.swing.JTextField txtCreatecommunity;
    private javax.swing.JTextField txtCreateemail;
    private javax.swing.JComboBox<String> txtCreatepatientBloodGroup;
    private javax.swing.JTextField txtCreatepatientDOB;
    private javax.swing.JTextField txtCreatepatientHeight;
    private javax.swing.JTextField txtCreatepatientName;
    private javax.swing.JTextField txtCreatepatientWeight;
    private javax.swing.JTextField txtCreatephone;
    private javax.swing.JTextField txtCreatezip;
    private javax.swing.JTextField txtDoctorAddress;
    private javax.swing.JTextField txtDoctorAge;
    private javax.swing.JTextField txtDoctorBloodGroup;
    private javax.swing.JTextField txtDoctorDesignation;
    private javax.swing.JTextField txtDoctorEmail;
    private javax.swing.JTextField txtDoctorGender;
    private javax.swing.JTextField txtDoctorHeight;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtDoctorPhone;
    private javax.swing.JTextField txtDoctorQualification;
    private javax.swing.JTextField txtDoctorType;
    private javax.swing.JTextField txtDoctorWeight;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmailModify;
    private javax.swing.JTextField txtHospitalAddress;
    private javax.swing.JTextField txtHospitalCity;
    private javax.swing.JTextField txtHospitalCommunity;
    private javax.swing.JTextField txtHospitalEmail;
    private javax.swing.JTextField txtHospitalEstablishedIn;
    private javax.swing.JTextField txtHospitalName;
    private javax.swing.JTextField txtHospitalPhone;
    private javax.swing.JTextField txtHospitalSearch;
    private javax.swing.JTextField txtHospitalZip;
    private javax.swing.JTextField txtLastVisit;
    private javax.swing.JTextField txtModDocAddress;
    private javax.swing.JTextField txtModDocCity;
    private javax.swing.JTextField txtModDocCommunity;
    private javax.swing.JTextField txtModDocDesignation;
    private javax.swing.JTextField txtModDocDoctorID;
    private javax.swing.JTextField txtModDocEmail;
    private javax.swing.JTextField txtModDocGender;
    private javax.swing.JTextField txtModDocHeight;
    private javax.swing.JTextField txtModDocName;
    private javax.swing.JTextField txtModDocPersonID;
    private javax.swing.JTextField txtModDocPhone;
    private javax.swing.JTextField txtModDocQuali;
    private javax.swing.JTextField txtModDocType;
    private javax.swing.JTextField txtModDocWeight;
    private javax.swing.JTextField txtModDocZip;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientBloodGroup;
    private javax.swing.JTextField txtPatientGender;
    private javax.swing.JTextField txtPatientGenderModify;
    private javax.swing.JTextField txtPatientHeight;
    private javax.swing.JTextField txtPatientHeightModify;
    private javax.swing.JTextField txtPatientIDModify;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientNameModify;
    private javax.swing.JTextField txtPatientWeight;
    private javax.swing.JTextField txtPatientWeightModify;
    private javax.swing.JTextField txtPersonIdModify;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPhoneModify;
    private javax.swing.JTextField txtSearchDoctorID;
    private javax.swing.JTextField txtSearchPatientID;
    private javax.swing.JTextField txtZipCodeModify;
    private javax.swing.JLabel zipCodeLabel;
    private javax.swing.JLabel zipCodeLabel1;
    // End of variables declaration//GEN-END:variables

    int currentModifyPatientID;
    int currentModifyDoctorID;
    int currentModifyHospitalID;
    
    public void displayPanel(JLayeredPane lpane, JPanel panel) {
        lpane.removeAll();
        lpane.add(panel);
        lpane.repaint();
        lpane.revalidate();
    }
    
    private void emptyPersonBased() {
        txtPatientName.setText("");
        txtPatientGender.setText("");
        txtPatientAge.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtPatientBloodGroup.setText("");
        txtAddress.setText("");
        txtPatientHeight.setText("");
        txtPatientWeight.setText("");
        txtLastVisit.setText("");
    }

    private void emptyTable(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }

    private void populateTable(JTable table, List<Object[]> objs) {
        int rowCount = table.getRowCount();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (Object[] c : objs) {
            model.addRow(c);
        }
        table.setModel(model);
    }

    private void populateCommunityTableModel(JTable table, List<Patient> patients) {
        int rowCount = table.getRowCount();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        //model.setRowCount(0);
        for (Patient p : patients) {
            int size = p.getEncounterHistory().getEncounters().size();
            sDF.setLenient(false);
            Object[] c = new Object[8];
            c[0] = p.getPatientID();
            c[1] = p.getName();
            c[2] = Utils.ageCalculator(p.getDateOfBirth());
            c[3] = p.getEncounterHistory().getEncounters().get(size - 1).getHeartRate();
            c[4] = p.getEncounterHistory().getEncounters().get(size - 1).getOxygenLevel();
            c[5] = p.getEncounterHistory().getEncounters().get(size - 1).getTemperature();
            c[6] = p.getEncounterHistory().getEncounters().get(size - 1).gethBloodPressure();
            c[7] = p.getEncounterHistory().getEncounters().get(size - 1).getlBloodPressure();
            model.addRow(c);
        }
        table.setModel(model);
    }

    public void resetPatientView() {
        txtPatientName.setText("");
        txtPatientGender.setText("");
        txtPatientAge.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtPatientBloodGroup.setText("");
        txtAddress.setText("");
        txtPatientHeight.setText("");
        txtPatientWeight.setText("");
        txtLastVisit.setText("");
        emptyTable(patientTable);
    }
    
    public void resetDoctorView() {
        txtDoctorName.setText("");
        txtDoctorGender.setText("");
        txtDoctorAge.setText("");
        txtDoctorEmail.setText("");
        txtDoctorPhone.setText("");
        txtDoctorBloodGroup.setText("");
        txtDoctorAddress.setText("");
        txtDoctorHeight.setText("");
        txtDoctorWeight.setText("");
        txtDoctorQualification.setText("");
        txtDoctorType.setText("");
        txtDoctorDesignation.setText("");
        txtSearchDoctorID.setText("");
    }
    
    public void resetHospitalView() {
        txtHospitalName.setText("");
        txtHospitalAddress.setText("");
        txtHospitalCity.setText("");
        txtHospitalCommunity.setText("");
        txtHospitalEmail.setText("");
        txtHospitalEstablishedIn.setText("");
        txtHospitalPhone.setText("");
        txtHospitalZip.setText("");
        txtHospitalSearch.setText("");
    }

    public void populatePersonCatalog() {

        JTable table = personTable;
        table.remove(noPersonTableStatus);
        table.setFillsViewportHeight(false);

        int rowCount = table.getRowCount();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (Person p : system.getPersonDirectory().getPersons()) {
            int displayPatientID = -1;
            int displayDoctorID = -1;
            int visits = -1;
            if (system.getPatientDirectory().getPersonIDs().contains(p.getPersonId())) {

                displayPatientID = system.getPatientDirectory().getPatientId(p.getPersonId());
                
                visits = system.getPatientDirectory().getPatient(displayPatientID).getEncounterHistory().
                        getEncounters().size();
            }
            
            if (system.getDoctorDirectory().getPersonIDs().contains(p.getPersonId())) {

                displayDoctorID = system.getDoctorDirectory().getDoctorId(p.getPersonId());
            }

            Object[] c = new Object[8];
            c[0] = p.getPersonId();
            if (displayPatientID != -1) {
                c[1] = displayPatientID;
                c[7] = visits;
            } else {
                c[1] = "-";
                c[7] = "-";

            }
            
            if (displayDoctorID != -1) {
                c[2] = displayDoctorID;
            } else {
                c[2] = "-";
            }

            c[3] = p.getName();
            c[4] = Utils.ageCalculator(p.getDateOfBirth());
            c[5] = p.getGender();
            c[6] = p.getPhoneNumber();

            model.addRow(c);
        }
        table.setModel(model);
        if (table.getRowCount() == 0) {
            table.add(tableRecordsStatus);
            table.setFillsViewportHeight(true);
        }

        if (model.getRowCount() == 0) {
            table.add(noPersonTableStatus);
            table.setFillsViewportHeight(true);
        }

    }
    
    private void emptyForm(){
        txtCreateaddress.setText("");
        txtCreatepatientBloodGroup.setSelectedIndex(0);
        txtCreatecity.setText("");
        txtCreateemail.setText("");
        txtCreatecommunity.setText("");
        CreategenderRadioButtonGroup.clearSelection();
        txtCreateemail.setText("");
        txtCreatepatientDOB.setText("");
        txtCreatepatientHeight.setText("");
        txtCreatepatientName.setText("");
        txtCreatepatientWeight.setText("");
        txtCreatephone.setText("");
        txtCreatezip.setText("");
    }
    
    
    public void populateHospitalCatalog() {

        JTable table = hospitalTable;
        table.remove(noHospitalTableStatus);
        table.setFillsViewportHeight(false);

        int rowCount = table.getRowCount();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (Hospital h : system.getHospitalDirectory().getHospitals()) {
            
            Object[] c = new Object[6];
            c[0] = h.getHospitalId();
            c[1] = h.getName();
            c[2] = h.getEstablishedIn();
            c[3] = h.getEmail();
            c[4] = h.getContact();
            c[5] = String.valueOf(h.getHouse().getCity() + " - " + String.format("%05d", h.getHouse().getZip())); 

            model.addRow(c);
        }
        table.setModel(model);
        if (table.getRowCount() == 0) {
            table.add(tableRecordsStatus);
            table.setFillsViewportHeight(true);
        }

        if (model.getRowCount() == 0) {
            table.add(noHospitalTableStatus);
            table.setFillsViewportHeight(true);
        }

    }
    
    
}
