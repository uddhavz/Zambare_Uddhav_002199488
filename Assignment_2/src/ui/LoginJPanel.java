/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.*;

/**
 *
 * @author UddhavZ
 */
public class LoginJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SysAdminJPanel
     */
    ManagementSystem system;
    JLayeredPane layeredPane;
    Patient currentPatient;
    Doctor currentDoctor;
    Person currentPerson;
    
    public LoginJPanel(JLayeredPane layeredPane, ManagementSystem system) {
        initComponents();
//        SysAdminJPanel sajp = new SysAdminJPanel(mainJLayeredPane, system);
//        displayPanel(mjp);

        this.layeredPane=layeredPane;
        this.system = system;
        ImageIcon ii = new ImageIcon("icons1.jpg");
        Image img1 = ii.getImage().getScaledInstance(500, 100,Image.SCALE_SMOOTH);
        jLabel2.setIcon(new ImageIcon(img1));
//        populatePersonCatalog();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSysAdminTitle = new javax.swing.JLabel();
        lblSysUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblSysPassword = new javax.swing.JLabel();
        pfPassword = new javax.swing.JPasswordField();
        btnSysLogin = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        lblSysAdminTitle.setFont(new java.awt.Font("Algerian", 0, 36)); // NOI18N
        lblSysAdminTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSysAdminTitle.setText("Login");
        lblSysAdminTitle.setToolTipText("");
        lblSysAdminTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblSysUsername.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        lblSysUsername.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSysUsername.setText("Username :");
        lblSysUsername.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        lblSysPassword.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        lblSysPassword.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSysPassword.setText("Password :");
        lblSysPassword.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        btnSysLogin.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnSysLogin.setText("Login");
        btnSysLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSysLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblSysUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSysPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pfPassword)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSysLogin)
                        .addGap(78, 78, 78)))
                .addGap(289, 289, 289))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(lblSysAdminTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(154, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblSysAdminTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSysUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSysPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSysLogin)
                .addGap(28, 28, 28)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSysLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSysLoginActionPerformed
        String User = null;
        String Pass = null;
            
        if((txtUsername.getText().equals(""))||(pfPassword.getText().equals("")) ){
            JOptionPane.showMessageDialog(this, "Please provide Username and Password!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        User = txtUsername.getText();
//        
        
        Pass = pfPassword.getText();
        
        if((User.equals("sysadmin"))||(Pass.equals("sadmin"))){
            SysAdminJPanel sysadminPanel = new SysAdminJPanel(layeredPane, system);
            displayPanel(sysadminPanel);
        }
        else if((User.equals("hospadmin"))||(Pass.equals("hadmin"))){
            HospAdminJPanel hospadminPanel = new HospAdminJPanel(layeredPane, system);
            displayPanel(hospadminPanel);  
        }
        else if((User.equals("cadmin"))||(Pass.equals("cadmin"))){
            CommunityAdminJPanel cadminPanel = new CommunityAdminJPanel(layeredPane, system);
            displayPanel(cadminPanel);  
        }
        else if(Integer.parseInt(User)>5000 && Integer.parseInt(User)<5999){
            int User1 = Integer.parseInt(User);
            if(system.getPatientDirectory().getPatientIDs()!=null && !system.getPatientDirectory().getPatientIDs().contains(User1)){
                JOptionPane.showMessageDialog(this, "Username and Password incorrect", "Error",JOptionPane.ERROR_MESSAGE);
                txtUsername.setText("");
                pfPassword.setText("");
                return;
            
            }
            currentPatient = system.getPatientDirectory().getPatient(User1);
            String name = currentPatient.getName();
            SimpleDateFormat sDF = new SimpleDateFormat("MM/dd/yyyy");
            String dob = sDF.format(currentPatient.getDateOfBirth());
            String PasswordCheck =  name.toUpperCase().substring(0,4) +dob.substring(0,2) + dob.substring(3, 5);
            System.out.print("patientID:"+PasswordCheck);
            if(Pass.equals(PasswordCheck)){
                PatientJPanel patientPanel = new PatientJPanel(layeredPane, system, User1);
                displayPanel(patientPanel);
            }
            else {
            JOptionPane.showMessageDialog(this, "Username and Password incorrect", "Error",JOptionPane.ERROR_MESSAGE);
            txtUsername.setText("");
            pfPassword.setText("");
            }
        }
        else if(Integer.parseInt(User)>8000 && Integer.parseInt(User)<8999){
            int User1 = Integer.parseInt(User);
            if(system.getDoctorDirectory().getDoctorIDs()!=null && !system.getDoctorDirectory().getDoctorIDs().contains(User1)){
                JOptionPane.showMessageDialog(this, "Username and Password incorrect", "Error",JOptionPane.ERROR_MESSAGE);
                txtUsername.setText("");
                pfPassword.setText("");
                return;
            }
            currentDoctor = system.getDoctorDirectory().getDoctor(User1);
            String name = currentDoctor.getName();
            SimpleDateFormat sDF = new SimpleDateFormat("MM/dd/yyyy");
            String dob = sDF.format(currentDoctor.getDateOfBirth());
            String PasswordCheck =  name.toUpperCase().substring(0,4) +dob.substring(0,2) + dob.substring(3, 5);
            System.out.print("patientID:"+PasswordCheck);
            if(Pass.equals(PasswordCheck)){
                DoctorJPanel doctorPanel = new DoctorJPanel(layeredPane, system, User1);
                displayPanel(doctorPanel);
            }
            else {
            JOptionPane.showMessageDialog(this, "Username and Password incorrect", "Error",JOptionPane.ERROR_MESSAGE);
            txtUsername.setText("");
            pfPassword.setText("");
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Username and Password incorrect", "Error",JOptionPane.ERROR_MESSAGE);
            txtUsername.setText("");
            pfPassword.setText("");
        }
        
                
                
    }//GEN-LAST:event_btnSysLoginActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSysLogin;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblSysAdminTitle;
    private javax.swing.JLabel lblSysPassword;
    private javax.swing.JLabel lblSysUsername;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    
    public void displayPanel(JPanel panel) {
        layeredPane.removeAll();
        layeredPane.add(panel);
        layeredPane.repaint();
        layeredPane.revalidate();
    }
}
