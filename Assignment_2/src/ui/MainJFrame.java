/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import model.*;

/**
 *
 * @author UddhavZ
 */
public class MainJFrame extends javax.swing.JFrame {
     ManagementSystem system;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        system = new ManagementSystem();
        loadData();
        LoginJPanel mjp = new LoginJPanel(mainJLayeredPane, system);
        displayPanel(mjp);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainJPanel = new javax.swing.JPanel();
        topbarJPanel = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        mainJLayeredPane = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        topbarJPanel.setBackground(new java.awt.Color(0, 0, 0));

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Stencil", 0, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(204, 204, 204));
        lblTitle.setText("Longwood Medical Center");

        javax.swing.GroupLayout topbarJPanelLayout = new javax.swing.GroupLayout(topbarJPanel);
        topbarJPanel.setLayout(topbarJPanelLayout);
        topbarJPanelLayout.setHorizontalGroup(
            topbarJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topbarJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(150, 150, 150))
        );
        topbarJPanelLayout.setVerticalGroup(
            topbarJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topbarJPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblTitle)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        mainJLayeredPane.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 513, Short.MAX_VALUE)
        );

        mainJLayeredPane.add(jPanel1, "card2");

        javax.swing.GroupLayout mainJPanelLayout = new javax.swing.GroupLayout(mainJPanel);
        mainJPanel.setLayout(mainJPanelLayout);
        mainJPanelLayout.setHorizontalGroup(
            mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topbarJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainJLayeredPane)
        );
        mainJPanelLayout.setVerticalGroup(
            mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainJPanelLayout.createSequentialGroup()
                .addComponent(topbarJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainJLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * \
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLayeredPane mainJLayeredPane;
    private javax.swing.JPanel mainJPanel;
    private javax.swing.JPanel topbarJPanel;
    // End of variables declaration//GEN-END:variables

    public void displayPanel(JPanel panel) {
        mainJLayeredPane.removeAll();
        mainJLayeredPane.add(panel);
        mainJLayeredPane.repaint();
        mainJLayeredPane.revalidate();
    }
    
    void loadData(){
       
        Person p = null;
        Patient patient = null;
        Doctor doctor = null;
        Hospital h = null;
        Encounter e = null;
        try {
            
            h = new Hospital("Leaf Village Medical Center",1987,"help@leafvillage.com",9348872332L,18675,"Orange County","Los Angeles",07652);
            system.addHospital(h);
            
            h = new Hospital("Rain Village Medical Center",1971,"help@rainvillage.com",8872393432L,75,"Lexington","Boston",02115);
            system.addHospital(h);
            
            p = new Person("Naruto","10/18/1997","Male","B-","naruto@gmail.com",9345654332L,165,60,143,"Orange County","Los Angeles",07652,null, null, null);
            system.addPerson(p);
            
            p = new Person("Sasuke","05/24/1990","Male","O+","sasuke@gmail.com",3128831288L,190,90,56,"Orange County","Los Angeles",07652,null, null, null);
            system.addPerson(p);
            
            p = new Person("Kakashi","04/05/1980","Male","O-","kakashi@gmail.com",7877778965L,183,80,101,"Lexington","Boston",02115,null, null, null);
            system.addPerson(p);
            
            p = new Person("Madara","10/10/1997","Male","AB+","sakura@gmail.com",6092658749L,180,55,9,"Manhattan","New York",05634,null, null, null);
            system.addPerson(p);
            patient = Utils.personToPatient(p);
            
            e=new Encounter(new Date(), 100, 100, 100, 100, 100);
            patient.getEncounterHistory().getEncounters().add(e);
            system.addPatient(patient);
            
            p = new Person("Hinata","05/01/1999","Female","B+","hinata@gmail.com",9766783421L,180,75,46,"Manhattan","New York",05634,null, null, null);
            system.addPerson(p);
            patient = Utils.personToPatient(p); 
            e=new Encounter(new Date(), 100, 100, 100, 100, 100);
            patient.getEncounterHistory().getEncounters().add(e);
            system.addPatient(patient);
            System.out.println("Hinata 05/01/1999");
            
            p = new Person("Minato","06/12/2000","Male","O+","minato@gmail.com",7824552160L,175,68,76,"NYC","New York",01235,null, null, null);
            patient = Utils.personToPatient(p);
            e=new Encounter(Utils.dateTime(2019, 8, 8, 10, 30), 99, 110, 98, 100, 80);
            patient.getEncounterHistory().getEncounters().add(e);
            e=new Encounter(new Date(), 95, 110, 98, 100, 80); //latest entry, date
            patient.getEncounterHistory().getEncounters().add(e);
            system.addPatient(patient);
            
            p = new Person("Tsunade","03/28/1975","Female","B-","tsunade@gmail.com",3548791642L,183,60,101,"Lexington","Boston",02215,"Head Doctor", "Ortho", "MD");
            system.addPerson(p);
            doctor = Utils.personToDoctor(p);
            system.addDoctor(doctor);
            System.out.println("Tsunade 03/28/1975");
            
            p = new Person("Sakura","06/28/1975","Female","B-","tsunade@gmail.com",8888791642L,145,55,101,"Manhattan","New York",05634,"Jr Doctor", "Ortho", "MBBS");
            system.addPerson(p);
            doctor = Utils.personToDoctor(p);
            system.addDoctor(doctor);
            System.out.println("Sakura 06/28/1975");
            
            p = new Person("Shizune","03/12/1975","Female","B-","tsunade@gmail.com",3777791642L,163,70,101,"NYC","New York",01235,"Sub Doctor", "Dentist", "MS");
            system.addPerson(p);
            doctor = Utils.personToDoctor(p);
            system.addDoctor(doctor);
            System.out.println("Shizune 03/12/1975");
            
            p = new Person("Kushina","03/28/1965","Female","O+","kushina@gmail.com",4587912604L,175,70,1,"NYC","New York",05432,null, null, null);
            system.addPerson(p);
            patient = Utils.personToPatient(p);
            e=new Encounter(Utils.dateTime(2019, 8, 8, 10, 30), 99, 110, 98, 100, 80);
            patient.getEncounterHistory().getEncounters().add(e);
            e=new Encounter(new Date(), 99, 110, 98, 100, 80); //latest entry, date
            patient.getEncounterHistory().getEncounters().add(e);
            system.addPatient(patient);
            
            Utils.copyToClipboard(system.getPatientDirectory().getPatientIDs().get(0));
        } catch (ParseException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
