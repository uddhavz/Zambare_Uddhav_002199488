
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.*;

/**
 *
 * @author UddhavZ
 */
public class DoctorJPanel extends javax.swing.JPanel {
    
    ManagementSystem system;
    JLayeredPane layeredPane;
    Patient currentPatient;
    Hospital currentHospital;
    Hospital newHospital;
    Doctor currentDoctor;
    Person newPerson;
    Person selectedPerson = new Person();

    String pattern = "MM/dd/yyyy hh:mm:ss";
    SimpleDateFormat sDF = new SimpleDateFormat(pattern);
    private int id;

    /**
     * Creates new form PatientJPanel
     */
    public DoctorJPanel(JLayeredPane layeredPane, ManagementSystem system, Integer LoginDoctorID) {
        initComponents();
        this.layeredPane = layeredPane;
        this.system = system;
        id = LoginDoctorID;
        sDF.setLenient(false);
        
        ImageIcon ii = new ImageIcon("doctor1.jpg");
        Image img1 = ii.getImage().getScaledInstance(680, 450, Image.SCALE_SMOOTH);
        jLabel1.setIcon(new ImageIcon(img1));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        noEncounterTableStatus = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnPersonalDetails = new javax.swing.JButton();
        btnPatientDetails = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        doctorJLayeredPane = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        patientdetailsJPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        txtPatientWeight = new javax.swing.JTextField();
        btnAddEncounter = new javax.swing.JButton();
        txtSearchPatientID = new javax.swing.JTextField();
        lblPatientID = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        txtPatientHeight = new javax.swing.JTextField();
        lblWeight = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lblEncounterHistorytitle = new javax.swing.JLabel();
        lblLastVisit = new javax.swing.JLabel();
        txtLastVisit = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPatientGender = new javax.swing.JTextField();
        txtPatientAge = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPatientBloodGroup = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        doctorModifyJPanel = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        txtModDocType = new javax.swing.JTextField();
        txtModDocPersonID = new javax.swing.JTextField();
        jSeparator10 = new javax.swing.JSeparator();
        txtModDocDoctorID = new javax.swing.JTextField();
        txtModDocEmail = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        txtModDocName = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        txtModDocPhone = new javax.swing.JTextField();
        txtModDocGender = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel35 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtModDocAddress = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtModDocHeight = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtModDocWeight = new javax.swing.JTextField();
        txtModDocCommunity = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        btnModDocSubmit = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        txtModDocZip = new javax.swing.JTextField();
        txtModDocQuali = new javax.swing.JTextField();
        zipCodeLabel1 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtModDocCity = new javax.swing.JTextField();
        txtModDocDesignation = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        doctordetailsJPanel = new javax.swing.JPanel();
        txtDoctorPhone = new javax.swing.JTextField();
        txtDoctorQualification = new javax.swing.JTextField();
        lblLastVisit1 = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblName1 = new javax.swing.JLabel();
        lblAge1 = new javax.swing.JLabel();
        txtDoctorAddress = new javax.swing.JTextField();
        lblWeight1 = new javax.swing.JLabel();
        txtDoctorHeight = new javax.swing.JTextField();
        lblHeight1 = new javax.swing.JLabel();
        lblLastVisit3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtDoctorDesignation = new javax.swing.JTextField();
        lblPatientID1 = new javax.swing.JLabel();
        lblLastVisit2 = new javax.swing.JLabel();
        txtDoctorBloodGroup = new javax.swing.JTextField();
        txtDoctorType = new javax.swing.JTextField();
        txtDoctorID = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnDocModify = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtDoctorAge = new javax.swing.JTextField();
        txtDoctorWeight = new javax.swing.JTextField();
        txtDoctorGender = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtDoctorEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        noEncounterTableStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noEncounterTableStatus.setText("No encounter record available");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        btnPersonalDetails.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnPersonalDetails.setText("Profile");
        btnPersonalDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPersonalDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonalDetailsActionPerformed(evt);
            }
        });

        btnPatientDetails.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnPatientDetails.setText("Patient Details");
        btnPatientDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPatientDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientDetailsActionPerformed(evt);
            }
        });

        btnLogOut.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnLogOut.setText("Log Out");
        btnLogOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        doctorJLayeredPane.setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
        );

        doctorJLayeredPane.add(jPanel2, "card2");

        patientdetailsJPanel.setBackground(new java.awt.Color(255, 255, 255));

        patientTable.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Heart Rate", "O2 %", "Temperature", "Systolic BP", "Diastolic BP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(patientTable);

        txtPatientWeight.setEditable(false);
        txtPatientWeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnAddEncounter.setBackground(new java.awt.Color(92, 184, 92));
        btnAddEncounter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddEncounter.setForeground(new java.awt.Color(255, 255, 255));
        btnAddEncounter.setText("Add Visit");
        btnAddEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEncounterActionPerformed(evt);
            }
        });

        lblPatientID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPatientID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientID.setText("Patient ID:");

        lblHeight.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblHeight.setText("Height:");

        txtPatientHeight.setEditable(false);
        txtPatientHeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblWeight.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblWeight.setText("Weight:");

        txtAddress.setEditable(false);
        txtAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblAge.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblAge.setText("Age:");

        lblName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblName.setText("Name:");

        txtPatientName.setEditable(false);
        txtPatientName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblEncounterHistorytitle.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblEncounterHistorytitle.setText("ENCOUNTER HISTORY");

        lblLastVisit.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblLastVisit.setText("Last Visit:");

        txtLastVisit.setEditable(false);
        txtLastVisit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtPhone.setEditable(false);
        txtPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText("Email:");

        txtEmail.setEditable(false);
        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("Gender:");

        txtPatientGender.setEditable(false);
        txtPatientGender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtPatientAge.setEditable(false);
        txtPatientAge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel10.setText("Address:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel9.setText("Blood Group:");

        txtPatientBloodGroup.setEditable(false);
        txtPatientBloodGroup.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setText("Phone:");

        btnSearch.setBackground(new java.awt.Color(33, 150, 243));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout patientdetailsJPanelLayout = new javax.swing.GroupLayout(patientdetailsJPanel);
        patientdetailsJPanel.setLayout(patientdetailsJPanelLayout);
        patientdetailsJPanelLayout.setHorizontalGroup(
            patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientdetailsJPanelLayout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, patientdetailsJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblWeight))
                    .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                        .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                                        .addComponent(txtLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtPatientGender))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientdetailsJPanelLayout.createSequentialGroup()
                                .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(269, 269, 269)))
                        .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHeight))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPatientBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109))
            .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientdetailsJPanelLayout.createSequentialGroup()
                        .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, patientdetailsJPanelLayout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblEncounterHistorytitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)))
                        .addContainerGap())
                    .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                        .addGap(299, 299, 299)
                        .addComponent(btnAddEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientdetailsJPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txtSearchPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(219, 219, 219))))
        );

        patientdetailsJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel5, jLabel8});

        patientdetailsJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel9, lblAge, lblHeight, lblWeight});

        patientdetailsJPanelLayout.setVerticalGroup(
            patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                        .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(patientdetailsJPanelLayout.createSequentialGroup()
                        .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLastVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPatientWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(patientdetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblEncounterHistorytitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        patientdetailsJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel5, jLabel8});

        patientdetailsJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel9, lblAge, lblHeight, lblWeight});

        doctorJLayeredPane.add(patientdetailsJPanel, "card4");

        doctorModifyJPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Doctor ID:");

        txtModDocPersonID.setEditable(false);

        txtModDocDoctorID.setEditable(false);

        jLabel38.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("DETAILS");

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel37.setText("Email:");

        txtModDocName.setEditable(false);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Person ID:");

        jLabel4.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("MODIFY");

        txtModDocGender.setEditable(false);

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Phone:");

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel35.setText("Unit No:");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Gender:");

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Weight:");

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Height:");

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("Name:");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Community:");

        btnModDocSubmit.setBackground(new java.awt.Color(92, 184, 92));
        btnModDocSubmit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnModDocSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnModDocSubmit.setText("SUBMIT");
        btnModDocSubmit.setBorder(null);
        btnModDocSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModDocSubmitActionPerformed(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel41.setText("Qualification:");

        zipCodeLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        zipCodeLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        zipCodeLabel1.setText("ZipCode:");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel40.setText("Designation:");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("City:");

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel39.setText("Type:");

        javax.swing.GroupLayout doctorModifyJPanelLayout = new javax.swing.GroupLayout(doctorModifyJPanel);
        doctorModifyJPanel.setLayout(doctorModifyJPanelLayout);
        doctorModifyJPanelLayout.setHorizontalGroup(
            doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(txtModDocDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtModDocGender, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtModDocName, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                .addGap(293, 293, 293)
                                .addComponent(btnModDocSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                        .addGap(257, 257, 257)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtModDocPersonID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel31)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtModDocCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtModDocHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel34)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtModDocWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(77, 77, 77)
                                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtModDocQuali, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctorModifyJPanelLayout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtModDocEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(78, 78, 78)
                                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtModDocPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtModDocType, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtModDocDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctorModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtModDocCity)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(zipCodeLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtModDocZip, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctorModifyJPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtModDocAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel38)
                        .addGap(12, 12, 12)
                        .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
        );

        doctorModifyJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtModDocAddress, txtModDocCity, txtModDocCommunity, txtModDocDesignation, txtModDocDoctorID, txtModDocEmail, txtModDocGender, txtModDocName, txtModDocPersonID, txtModDocPhone, txtModDocQuali, txtModDocType, txtModDocZip});

        doctorModifyJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel27, jLabel28, jLabel29, jLabel30, jLabel31, jLabel32, jLabel35, jLabel36, jLabel37, jLabel39, jLabel40, jLabel41, zipCodeLabel1});

        doctorModifyJPanelLayout.setVerticalGroup(
            doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtModDocDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtModDocName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtModDocPersonID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtModDocGender, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorModifyJPanelLayout.createSequentialGroup()
                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorModifyJPanelLayout.createSequentialGroup()
                                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)))))
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDocEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDocPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(txtModDocHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDocWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDocQuali, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDocType, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDocDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDocAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDocCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipCodeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDocZip, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(doctorModifyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtModDocCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addComponent(btnModDocSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        doctorModifyJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtModDocAddress, txtModDocCity, txtModDocCommunity, txtModDocDesignation, txtModDocDoctorID, txtModDocEmail, txtModDocGender, txtModDocName, txtModDocPersonID, txtModDocPhone, txtModDocQuali, txtModDocType, txtModDocZip});

        doctorModifyJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel27, jLabel28, jLabel29, jLabel30, jLabel31, jLabel32, jLabel35, jLabel36, jLabel37, jLabel39, jLabel40, jLabel41, zipCodeLabel1});

        doctorJLayeredPane.add(doctorModifyJPanel, "card5");

        doctordetailsJPanel.setBackground(new java.awt.Color(255, 255, 255));

        txtDoctorPhone.setEditable(false);
        txtDoctorPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtDoctorQualification.setEditable(false);
        txtDoctorQualification.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblLastVisit1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblLastVisit1.setText("Qualification:");

        txtDoctorName.setEditable(false);
        txtDoctorName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblName1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblName1.setText("Name:");

        lblAge1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblAge1.setText("Age:");

        txtDoctorAddress.setEditable(false);
        txtDoctorAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblWeight1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblWeight1.setText("Weight:");

        txtDoctorHeight.setEditable(false);
        txtDoctorHeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblHeight1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblHeight1.setText("Height:");

        lblLastVisit3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblLastVisit3.setText("Designation:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel13.setText("Phone:");

        txtDoctorDesignation.setEditable(false);
        txtDoctorDesignation.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblPatientID1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPatientID1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientID1.setText("Doctor ID:");

        lblLastVisit2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblLastVisit2.setText("Type:");

        txtDoctorBloodGroup.setEditable(false);
        txtDoctorBloodGroup.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtDoctorType.setEditable(false);
        txtDoctorType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel12.setText("Blood Group:");

        btnDocModify.setBackground(new java.awt.Color(92, 184, 92));
        btnDocModify.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDocModify.setForeground(new java.awt.Color(255, 255, 255));
        btnDocModify.setText("Modify");
        btnDocModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocModifyActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel11.setText("Address:");

        txtDoctorAge.setEditable(false);
        txtDoctorAge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtDoctorWeight.setEditable(false);
        txtDoctorWeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtDoctorGender.setEditable(false);
        txtDoctorGender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel15.setText("Gender:");

        txtDoctorEmail.setEditable(false);
        txtDoctorEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel7.setText("Email:");

        javax.swing.GroupLayout doctordetailsJPanelLayout = new javax.swing.GroupLayout(doctordetailsJPanel);
        doctordetailsJPanel.setLayout(doctordetailsJPanelLayout);
        doctordetailsJPanelLayout.setHorizontalGroup(
            doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctordetailsJPanelLayout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDoctorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDoctorPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                            .addGap(215, 215, 215)
                            .addComponent(btnDocModify, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                            .addGap(175, 175, 175)
                            .addComponent(lblPatientID1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                            .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                                    .addComponent(lblLastVisit2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtDoctorType, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                                    .addComponent(lblLastVisit1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtDoctorQualification, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(5, 5, 5)
                                    .addComponent(txtDoctorBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctordetailsJPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtDoctorGender, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctordetailsJPanelLayout.createSequentialGroup()
                                            .addComponent(lblLastVisit3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtDoctorDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                                    .addGap(27, 27, 27)
                                    .addComponent(lblHeight1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtDoctorHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblWeight1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtDoctorWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                            .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtDoctorAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                            .addComponent(lblAge1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(5, 5, 5)
                            .addComponent(txtDoctorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(136, 136, 136))
        );

        doctordetailsJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtDoctorDesignation, txtDoctorEmail, txtDoctorGender, txtDoctorPhone, txtDoctorQualification, txtDoctorType});

        doctordetailsJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel13, jLabel15, jLabel7, lblLastVisit1, lblLastVisit2, lblLastVisit3});

        doctordetailsJPanelLayout.setVerticalGroup(
            doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientID1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDoctorGender, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDoctorQualification, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLastVisit1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLastVisit2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLastVisit3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDoctorBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDoctorHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblHeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblWeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDoctorWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctordetailsJPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDoctorPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDoctorEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(doctordetailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDoctorAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(btnDocModify)
                .addGap(87, 87, 87))
        );

        doctordetailsJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtDoctorDesignation, txtDoctorEmail, txtDoctorGender, txtDoctorPhone, txtDoctorQualification, txtDoctorType});

        doctordetailsJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel13, jLabel15, jLabel7, lblLastVisit1, lblLastVisit2, lblLastVisit3});

        doctorJLayeredPane.add(doctordetailsJPanel, "card5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(doctorJLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnPersonalDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPatientDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogOut)
                    .addComponent(btnPersonalDetails)
                    .addComponent(btnPatientDetails))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doctorJLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPersonalDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonalDetailsActionPerformed
        displayPanel(doctorJLayeredPane, doctordetailsJPanel);
        populateDoctorDetails(id);
    }//GEN-LAST:event_btnPersonalDetailsActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        LoginJPanel hjp = new LoginJPanel(layeredPane, system);
        displayPanel(layeredPane, hjp);
        resetPatientView();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnAddEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEncounterActionPerformed
        //        emptyTable(communityTable);
        int pID = -1;
        try{
            pID=Integer.parseInt(txtSearchPatientID.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please provide a number!", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        Patient patient = new Patient();
        if(pID>5000 && pID<5999){
            if(system.getPatientDirectory().getPatientIDs()!=null && !system.getPatientDirectory().getPatientIDs().contains(pID)){
                JOptionPane.showMessageDialog(this, "Patient ID doesn't exist!", "Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            patient = system.getPatientDirectory().getPatient(pID);
        }
        else if(pID>1000 && pID<1999){
            if(system.getPatientDirectory().getPersonIDs().contains(pID)){
                int patientId = system.getPatientDirectory().getPatientId(pID);
                patient = system.getPatientDirectory().getPatient(patientId);
                //JOptionPane.showMessageDialog(this, "Next time!! Please use patient ID:"+patientId+ ".", "Info",JOptionPane.INFORMATION_MESSAGE);
            }
            else if(!system.getPersonDirectory().getPersonIds().contains(pID)){
                JOptionPane.showMessageDialog(this, "Person ID doesn't exist!", "Error",JOptionPane.ERROR_MESSAGE);
                return;
            }else{
                Person person = system.getPersonDirectory().getPerson(pID);
                patient = Utils.personToPatient(person);
                int patid = system.addPatient(patient);
                JOptionPane.showMessageDialog(this, "Patient successfully created!!\nPatient ID: "+ patid, "Info", JOptionPane.INFORMATION_MESSAGE);
                Utils.copyToClipboard(patid);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Wrong Person/Patient ID!!", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        EncounterJPanel ejp = new EncounterJPanel(layeredPane, patient, system, id);
        displayPanel(layeredPane,ejp);
    }//GEN-LAST:event_btnAddEncounterActionPerformed

    private void btnPatientDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientDetailsActionPerformed
        displayPanel(doctorJLayeredPane, patientdetailsJPanel);
    }//GEN-LAST:event_btnPatientDetailsActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        int id = -1;
        try {
            id = Integer.parseInt(txtSearchPatientID.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct ID!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        currentPatient = system.getPatientDirectory().getPatient(id);
        if (currentPatient == null) {
            JOptionPane.showMessageDialog(this, "Patient ID doesn't exist!!", "Error", JOptionPane.ERROR_MESSAGE);
            resetPatientView();
            return;
        }

        txtPatientName.setText(currentPatient.getName());
        txtPatientAge.setText(String.valueOf(Utils.ageCalculator(currentPatient.getDateOfBirth())));
        txtPatientBloodGroup.setText(currentPatient.getBloodGroup());
        txtPatientGender.setText(currentPatient.getGender());
        txtPatientHeight.setText(String.valueOf(currentPatient.getHeight()));
        txtPatientWeight.setText(String.valueOf(currentPatient.getWeight()));
        txtPhone.setText(String.valueOf(currentPatient.getPhoneNumber()));
        txtEmail.setText(currentPatient.getEmail());
        String addressData = String.valueOf(currentPatient.getHouse().getHouseNumber()) + ", "
        + currentPatient.getHouse().getCommunity() + ", "
        + currentPatient.getHouse().getCity() + " - "
        + String.format("%05d", currentPatient.getHouse().getZip());
        txtAddress.setText(addressData);

        int size = currentPatient.getEncounterHistory().getEncounters().size();

        if (size == 0) {
            txtLastVisit.setText("Never");
        } else {
            txtLastVisit.setText(sDF.format(currentPatient.getEncounterHistory().getEncounters().get(size - 1).getVisitDate()));
        }

        List<Object[]> data = new ArrayList<>();
        for (int i = size - 1; i >= 0; i--) {
            Object[] temp = new Object[6];
            temp[0] = sDF.format(currentPatient.getEncounterHistory().getEncounters().get(i).getVisitDate());
            temp[1] = currentPatient.getEncounterHistory().getEncounters().get(i).getHeartRate();
            temp[2] = currentPatient.getEncounterHistory().getEncounters().get(i).getOxygenLevel();
            temp[3] = currentPatient.getEncounterHistory().getEncounters().get(i).getTemperature();
            temp[4] = currentPatient.getEncounterHistory().getEncounters().get(i).gethBloodPressure();
            //            System.out.println(temp[4]);
            temp[5] = currentPatient.getEncounterHistory().getEncounters().get(i).getlBloodPressure();
            //            System.out.println(temp[5]);
            data.add(temp);
        }

        patientTable.remove(noEncounterTableStatus);
        patientTable.setFillsViewportHeight(false);
        populateTable(patientTable, data);
        if (((DefaultTableModel) patientTable.getModel()).getRowCount() == 0) {
            patientTable.add(noEncounterTableStatus);
            patientTable.setFillsViewportHeight(true);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDocModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocModifyActionPerformed

        displayPanel(doctorJLayeredPane, doctorModifyJPanel);
        txtModDocDoctorID.setText(String.valueOf(id));
        txtModDocName.setText(currentDoctor.getName());
        txtModDocGender.setText(currentDoctor.getGender());
        txtModDocEmail.setText(currentDoctor.getEmail());
        txtModDocAddress.setText(String.valueOf(currentDoctor.getHouse().getHouseNumber()));
        txtModDocZip.setText(String.valueOf(currentDoctor.getHouse().getZip()));
        txtModDocPhone.setText(String.valueOf(currentDoctor.getPhoneNumber()));
        txtModDocCommunity.setText(currentDoctor.getHouse().getCommunity());
        txtModDocHeight.setText(String.valueOf(currentDoctor.getHeight()));
        txtModDocWeight.setText(String.valueOf(currentDoctor.getWeight()));
        txtModDocCity.setText(currentDoctor.getHouse().getCity());
        txtModDocPersonID.setText(String.valueOf(currentDoctor.getPersonId()));
        txtModDocType.setText((currentDoctor.getType()));
        txtModDocQuali.setText((currentDoctor.getQualification()));
        txtModDocDesignation.setText((currentDoctor.getDesignation()));
    }//GEN-LAST:event_btnDocModifyActionPerformed

    private void btnModDocSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModDocSubmitActionPerformed
        int hNo = -1;

        try {
            hNo = Integer.parseInt(txtModDocAddress.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide House Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getDoctorDirectory().getDoctor(id).getHouse().setHouseNumber(hNo);

        float height = -1;
        float weight = -1;

        try {
            height = Float.parseFloat(txtModDocHeight.getText());
            weight = Float.parseFloat(txtModDocWeight.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide weight and height in numerics!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getDoctorDirectory().getDoctor(id).setHeight(height);
        system.getDoctorDirectory().getDoctor(id).setWeight(weight);

        int zipCode = -1;

        try {
            zipCode = Integer.parseInt(txtModDocZip.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide zip code as numbers!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getDoctorDirectory().getDoctor(id).getHouse().setZip(zipCode);

        String regex = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(txtModDocEmail.getText());

        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this, "Please provide city!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getDoctorDirectory().getDoctor(id).setEmail(txtModDocEmail.getText());

        long phno = -1;

        try {
            phno = Long.parseLong(txtModDocPhone.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please provide correct phone Number!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        system.getDoctorDirectory().getDoctor(id).setPhoneNumber(phno);

        if (txtModDocCommunity.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please provide community!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        House house = system.getDoctorDirectory().getDoctor(id).getHouse();
        String oldCommunity = house.getCommunity();
        String oldCity = house.getCity();
        if (!oldCity.equalsIgnoreCase(txtModDocCity.getText())
            || !oldCommunity.equalsIgnoreCase(txtModDocCommunity.getText())) {
            system.getCity(oldCity).getCommunity(oldCommunity).removeHouse(house);
            system.getCity(txtModDocCity.getText()).getCommunity(txtModDocCommunity.getText()).addCommunityHouse(house);
            system.getDoctorDirectory().getDoctor(id).getHouse().setCommunity(txtModDocCommunity.getText());
            system.getDoctorDirectory().getDoctor(id).getHouse().setCity(txtModDocCity.getText());
        }

        if(txtModDocDesignation.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide designation!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        system.getDoctorDirectory().getDoctor(id).setDesignation(txtModDocDesignation.getText());

        if(txtModDocType.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide doctor type!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        system.getDoctorDirectory().getDoctor(id).setType(txtModDocType.getText());

        if(txtModDocQuali.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide qualification!!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        system.getDoctorDirectory().getDoctor(id).setQualification(txtModDocQuali.getText());

        Person person = Utils.doctorToPerson(system.getDoctorDirectory().getDoctor(id));

        system.getPersonDirectory().replacePerson(person);

        JOptionPane.showMessageDialog(this, "Doctor Details Updated successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
        displayPanel(doctorJLayeredPane, doctordetailsJPanel);
        
        populateDoctorDetails(id);
    }//GEN-LAST:event_btnModDocSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEncounter;
    private javax.swing.JButton btnDocModify;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnModDocSubmit;
    private javax.swing.JButton btnPatientDetails;
    private javax.swing.JButton btnPersonalDetails;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLayeredPane doctorJLayeredPane;
    private javax.swing.JPanel doctorModifyJPanel;
    private javax.swing.JPanel doctordetailsJPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAge1;
    private javax.swing.JLabel lblEncounterHistorytitle;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblHeight1;
    private javax.swing.JLabel lblLastVisit;
    private javax.swing.JLabel lblLastVisit1;
    private javax.swing.JLabel lblLastVisit2;
    private javax.swing.JLabel lblLastVisit3;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPatientID1;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblWeight1;
    private javax.swing.JLabel noEncounterTableStatus;
    private javax.swing.JTable patientTable;
    private javax.swing.JPanel patientdetailsJPanel;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtDoctorAddress;
    private javax.swing.JTextField txtDoctorAge;
    private javax.swing.JTextField txtDoctorBloodGroup;
    private javax.swing.JTextField txtDoctorDesignation;
    private javax.swing.JTextField txtDoctorEmail;
    private javax.swing.JTextField txtDoctorGender;
    private javax.swing.JTextField txtDoctorHeight;
    private javax.swing.JTextField txtDoctorID;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtDoctorPhone;
    private javax.swing.JTextField txtDoctorQualification;
    private javax.swing.JTextField txtDoctorType;
    private javax.swing.JTextField txtDoctorWeight;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLastVisit;
    private javax.swing.JTextField txtModDocAddress;
    private javax.swing.JTextField txtModDocCity;
    private javax.swing.JTextField txtModDocCommunity;
    private javax.swing.JTextField txtModDocDesignation;
    private javax.swing.JTextField txtModDocDoctorID;
    private javax.swing.JTextField txtModDocEmail;
    private javax.swing.JTextField txtModDocGender;
    private javax.swing.JTextField txtModDocHeight;
    private javax.swing.JTextField txtModDocName;
    private javax.swing.JTextField txtModDocPersonID;
    private javax.swing.JTextField txtModDocPhone;
    private javax.swing.JTextField txtModDocQuali;
    private javax.swing.JTextField txtModDocType;
    private javax.swing.JTextField txtModDocWeight;
    private javax.swing.JTextField txtModDocZip;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientBloodGroup;
    private javax.swing.JTextField txtPatientGender;
    private javax.swing.JTextField txtPatientHeight;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientWeight;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSearchPatientID;
    private javax.swing.JLabel zipCodeLabel1;
    // End of variables declaration//GEN-END:variables

    int currentModifyPatientID;
    
    public void displayPanel(JLayeredPane lpane, JPanel panel) {
        lpane.removeAll();
        lpane.add(panel);
        lpane.repaint();
        lpane.revalidate();
    }
    
    
    public void resetPatientView() {
        txtPatientName.setText("");
        txtPatientGender.setText("");
        txtPatientAge.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtPatientBloodGroup.setText("");
        txtAddress.setText("");
        txtPatientHeight.setText("");
        txtPatientWeight.setText("");
        txtLastVisit.setText("");
        emptyTable(patientTable);
    }
    
    private void emptyTable(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }
    
    
    
    public void populatePatientDetails(Integer Id ){
        currentPatient = system.getPatientDirectory().getPatient(id);
        
        txtSearchPatientID.setText(String.valueOf(Id));
        txtPatientName.setText(currentPatient.getName());
        txtPatientAge.setText(String.valueOf(Utils.ageCalculator(currentPatient.getDateOfBirth())));
        txtPatientBloodGroup.setText(currentPatient.getBloodGroup());
        txtPatientGender.setText(currentPatient.getGender());
        txtPatientHeight.setText(String.valueOf(currentPatient.getHeight()));
        txtPatientWeight.setText(String.valueOf(currentPatient.getWeight()));
        txtPhone.setText(String.valueOf(currentPatient.getPhoneNumber()));
        txtEmail.setText(currentPatient.getEmail());
        String addressData = String.valueOf(currentPatient.getHouse().getHouseNumber()) + ", "
        + currentPatient.getHouse().getCommunity() + ", "
        + currentPatient.getHouse().getCity() + " - "
        + String.format("%05d", currentPatient.getHouse().getZip());
        txtAddress.setText(addressData);

        int size = currentPatient.getEncounterHistory().getEncounters().size();

        if (size == 0) {
            txtLastVisit.setText("Never");
        } else {
            txtLastVisit.setText(sDF.format(currentPatient.getEncounterHistory().getEncounters().get(size - 1).getVisitDate()));
        }

        List<Object[]> data = new ArrayList<>();
        for (int i = size - 1; i >= 0; i--) {
            Object[] temp = new Object[6];
            temp[0] = sDF.format(currentPatient.getEncounterHistory().getEncounters().get(i).getVisitDate());
            temp[1] = currentPatient.getEncounterHistory().getEncounters().get(i).getHeartRate();
            temp[2] = currentPatient.getEncounterHistory().getEncounters().get(i).getOxygenLevel();
            temp[3] = currentPatient.getEncounterHistory().getEncounters().get(i).getTemperature();
            temp[4] = currentPatient.getEncounterHistory().getEncounters().get(i).gethBloodPressure();
            //            System.out.println(temp[4]);
            temp[5] = currentPatient.getEncounterHistory().getEncounters().get(i).getlBloodPressure();
            //            System.out.println(temp[5]);
            data.add(temp);
        }

        patientTable.remove(noEncounterTableStatus);
        patientTable.setFillsViewportHeight(false);
        populateTable(patientTable, data);
        if (((DefaultTableModel) patientTable.getModel()).getRowCount() == 0) {
            patientTable.add(noEncounterTableStatus);
            patientTable.setFillsViewportHeight(true);
        }
    }
    
    
    public void populateDoctorDetails(Integer Id ){
        currentDoctor = system.getDoctorDirectory().getDoctor(id);
        
        txtDoctorID.setText(String.valueOf(Id));
        txtDoctorName.setText(currentDoctor.getName());
        txtDoctorAge.setText(String.valueOf(Utils.ageCalculator(currentDoctor.getDateOfBirth())));
        txtDoctorBloodGroup.setText(currentDoctor.getBloodGroup());
        txtDoctorGender.setText(currentDoctor.getGender());
        txtDoctorHeight.setText(String.valueOf(currentDoctor.getHeight()));
        txtDoctorWeight.setText(String.valueOf(currentDoctor.getWeight()));
        txtDoctorPhone.setText(String.valueOf(currentDoctor.getPhoneNumber()));
        txtDoctorEmail.setText(currentDoctor.getEmail());
        String addressData = String.valueOf(currentDoctor.getHouse().getHouseNumber()) + ", "
        + currentDoctor.getHouse().getCommunity() + ", "
        + currentDoctor.getHouse().getCity() + " - "
        + String.format("%05d", currentDoctor.getHouse().getZip());
        txtDoctorAddress.setText(addressData);
        txtDoctorType.setText(currentDoctor.getType());
        txtDoctorQualification.setText(currentDoctor.getQualification());
        txtDoctorDesignation.setText(currentDoctor.getDesignation());
    }

    
    private void populateTable(JTable table, List<Object[]> objs) {
        int rowCount = table.getRowCount();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (Object[] c : objs) {
            model.addRow(c);
        }
        table.setModel(model);
    }
    

}
